{"ast":null,"code":"var _jsxFileName = \"/Users/julienjuge/DEVPERSO/video-chat/components/Participant.js\";\nvar __jsx = React.createElement;\nimport { AudioMutedOutlined, AudioOutlined } from \"@ant-design/icons\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Button } from \"antd\";\n\nconst Participant = ({\n  participant\n}) => {\n  const {\n    0: videoTracks,\n    1: setVideoTracks\n  } = useState([]);\n  const {\n    0: audioTracks,\n    1: setAudioTracks\n  } = useState([]);\n  const {\n    0: audioEnabled,\n    1: setAudioEnabled\n  } = useState(true);\n  const videoRef = useRef();\n  const audioRef = useRef();\n\n  const trackpubsToTracks = trackMap => Array.from(trackMap.values()).map(publication => publication.track).filter(track => track !== null);\n\n  useEffect(() => {\n    const trackSubscribed = track => {\n      if (track.kind === \"video\") {\n        setVideoTracks(videoTracks => [...videoTracks, track]);\n      } else {\n        setAudioTracks(audioTracks => [...audioTracks, track]);\n      }\n    };\n\n    const trackUnsubscribed = track => {\n      if (track.kind === \"video\") {\n        setVideoTracks(videoTracks => videoTracks.filter(v => v !== track));\n      } else {\n        setAudioTracks(audioTracks => audioTracks.filter(a => a !== track));\n      }\n    };\n\n    setVideoTracks(trackpubsToTracks(participant.videoTracks));\n    setAudioTracks(trackpubsToTracks(participant.audioTracks));\n    participant.on(\"trackSubscribed\", trackSubscribed);\n    participant.on(\"trackUnsubscribed\", trackUnsubscribed);\n    return () => {\n      setVideoTracks([]);\n      setAudioTracks([]);\n      participant.removeAllListeners();\n    };\n  }, [participant]);\n  useEffect(() => {\n    const videoTrack = videoTracks[0];\n    const audioTrack = audioTracks[0];\n\n    if (videoTrack && audioTrack) {\n      videoTrack.attach(videoRef.current);\n      audioTrack.attach(audioRef.current);\n      return () => {\n        videoTrack.detach();\n        audioTrack.detach();\n      };\n    }\n  }, [videoTracks]);\n  return __jsx(\"div\", {\n    className: \"participant\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, participant.identity), __jsx(\"video\", {\n    ref: videoRef,\n    autoPlay: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), __jsx(\"audio\", {\n    ref: audioRef,\n    autoPlay: true,\n    muted: !audioEnabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), audioEnabled === true ? __jsx(Button, {\n    onClick: e => setAudioEnabled(false),\n    style: {\n      position: \"relative\"\n    },\n    type: \"primary\",\n    shape: \"circle\",\n    icon: __jsx(AudioMutedOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }) : __jsx(Button, {\n    onClick: e => setAudioEnabled(true),\n    style: {\n      position: \"relative\"\n    },\n    type: \"primary\",\n    shape: \"circle\",\n    icon: __jsx(AudioOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Participant;","map":{"version":3,"sources":["/Users/julienjuge/DEVPERSO/video-chat/components/Participant.js"],"names":["AudioMutedOutlined","AudioOutlined","React","useEffect","useRef","useState","Button","Participant","participant","videoTracks","setVideoTracks","audioTracks","setAudioTracks","audioEnabled","setAudioEnabled","videoRef","audioRef","trackpubsToTracks","trackMap","Array","from","values","map","publication","track","filter","trackSubscribed","kind","trackUnsubscribed","v","a","on","removeAllListeners","videoTrack","audioTrack","attach","current","detach","identity","e","position"],"mappings":"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","sourcesContent":["import { AudioMutedOutlined, AudioOutlined } from \"@ant-design/icons\";\nimport React, { useEffect, useRef, useState } from \"react\";\n\nimport { Button } from \"antd\";\n\nconst Participant = ({ participant }) => {\n  const [videoTracks, setVideoTracks] = useState([]);\n  const [audioTracks, setAudioTracks] = useState([]);\n  const [audioEnabled, setAudioEnabled] = useState(true);\n  const videoRef = useRef();\n  const audioRef = useRef();\n  const trackpubsToTracks = trackMap =>\n    Array.from(trackMap.values())\n      .map(publication => publication.track)\n      .filter(track => track !== null);\n  useEffect(() => {\n    const trackSubscribed = track => {\n      if (track.kind === \"video\") {\n        setVideoTracks(videoTracks => [...videoTracks, track]);\n      } else {\n        setAudioTracks(audioTracks => [...audioTracks, track]);\n      }\n    };\n\n    const trackUnsubscribed = track => {\n      if (track.kind === \"video\") {\n        setVideoTracks(videoTracks => videoTracks.filter(v => v !== track));\n      } else {\n        setAudioTracks(audioTracks => audioTracks.filter(a => a !== track));\n      }\n    };\n    setVideoTracks(trackpubsToTracks(participant.videoTracks));\n    setAudioTracks(trackpubsToTracks(participant.audioTracks));\n\n    participant.on(\"trackSubscribed\", trackSubscribed);\n    participant.on(\"trackUnsubscribed\", trackUnsubscribed);\n\n    return () => {\n      setVideoTracks([]);\n      setAudioTracks([]);\n      participant.removeAllListeners();\n    };\n  }, [participant]);\n\n  useEffect(() => {\n    const videoTrack = videoTracks[0];\n    const audioTrack = audioTracks[0];\n    if (videoTrack && audioTrack) {\n      videoTrack.attach(videoRef.current);\n      audioTrack.attach(audioRef.current);\n      return () => {\n        videoTrack.detach();\n        audioTrack.detach();\n      };\n    }\n  }, [videoTracks]);\n\n  return (\n    <div className=\"participant\">\n      <h3>{participant.identity}</h3>\n      <video ref={videoRef} autoPlay={true} />\n      <audio ref={audioRef} autoPlay={true} muted={!audioEnabled} />\n      {audioEnabled === true ? (\n        <Button\n          onClick={e => setAudioEnabled(false)}\n          style={{ position: \"relative\" }}\n          type=\"primary\"\n          shape=\"circle\"\n          icon={<AudioMutedOutlined />}\n        />\n      ) : (\n        <Button\n          onClick={e => setAudioEnabled(true)}\n          style={{ position: \"relative\" }}\n          type=\"primary\"\n          shape=\"circle\"\n          icon={<AudioOutlined />}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Participant;\n"]},"metadata":{},"sourceType":"module"}