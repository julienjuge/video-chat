{"ast":null,"code":"var __jsx = React.createElement;\nimport { AudioMutedOutlined, AudioOutlined, VideoCameraAddOutlined, VideoCameraOutlined } from \"@ant-design/icons\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Button } from \"antd\";\nimport { Rnd } from \"react-rnd\";\n\nconst Participant = ({\n  participant,\n  isLocal,\n  videoRef\n}) => {\n  const {\n    0: videoTracks,\n    1: setVideoTracks\n  } = useState([]);\n  const {\n    0: audioTracks,\n    1: setAudioTracks\n  } = useState([]);\n  const {\n    0: audioEnabled,\n    1: setAudioEnabled\n  } = useState(false);\n  const {\n    0: videoEnabled,\n    1: setVideoEnabled\n  } = useState(true);\n  const {\n    0: widthLocal,\n    1: setWidthLocal\n  } = useState(270);\n  const {\n    0: heightLocal,\n    1: setHeighLocal\n  } = useState(270);\n  const {\n    0: xLocal,\n    1: setXLocal\n  } = useState(1);\n  const {\n    0: yLocal,\n    1: setYLocal\n  } = useState(1);\n  useEffect(() => {\n    return () => {\n      setVideoTracks([]);\n      setAudioTracks([]);\n    };\n  }, [participant]);\n\n  const getAudioButtons = () => {\n    console.log(\"audio buttons\");\n\n    if (isLocal === true) {\n      if (audioEnabled) {\n        return __jsx(Button, {\n          onClick: e => setAudioEnabled(false),\n          style: {\n            position: \"relative\"\n          },\n          type: \"primary\",\n          shape: \"circle\",\n          icon: __jsx(AudioMutedOutlined, null)\n        });\n      } else {\n        return __jsx(Button, {\n          onClick: e => setAudioEnabled(true),\n          style: {\n            position: \"relative\",\n            color: \"red\"\n          },\n          type: \"primary\",\n          shape: \"circle\",\n          icon: __jsx(AudioOutlined, null)\n        });\n      }\n    }\n\n    return __jsx(\"div\", null);\n  };\n\n  const getVideoButtons = () => {\n    if (isLocal === true) {\n      if (videoEnabled) {\n        return __jsx(Button, {\n          onClick: e => {\n            setVideoEnabled(false);\n            const videoTrack = videoTracks[0];\n\n            if (videoTrack) {\n              videoTrack.enable(false);\n              videoTrack.attach(videoRef.current);\n            }\n          },\n          style: {\n            position: \"relative\"\n          },\n          type: \"primary\",\n          shape: \"circle\",\n          icon: __jsx(VideoCameraOutlined, null)\n        });\n      } else {\n        return __jsx(Button, {\n          onClick: e => {\n            setVideoEnabled(true);\n            const videoTrack = videoTracks[0];\n\n            if (videoTrack) {\n              videoTrack.enable(true);\n              videoTrack.attach(videoRef.current);\n            }\n          },\n          style: {\n            position: \"relative\",\n            color: \"red\"\n          },\n          type: \"primary\",\n          shape: \"circle\",\n          icon: __jsx(VideoCameraOutlined, null)\n        });\n      }\n    }\n\n    return __jsx(\"div\", null);\n  };\n\n  if (isLocal) {\n    return __jsx(Rnd, {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        border: \"solid 1px #ddd\",\n        background: \"#f0f0f0\"\n      },\n      size: {\n        width: widthLocal,\n        height: heightLocal\n      },\n      position: {\n        x: xLocal,\n        y: yLocal\n      },\n      onDragStop: (e, d) => {\n        setXLocal(d.x);\n        setYLocal(d.y);\n      },\n      onResizeStop: (e, direction, ref, delta, position) => {\n        setWidthLocal(ref.offsetWidth);\n        setHeighLocal(ref.offsetHeight);\n        console.log(position);\n      }\n    }, __jsx(\"div\", {\n      className: \"participant\",\n      style: {\n        marginRight: 0,\n        width: \"99%\",\n        height: \"99%\"\n      }\n    }, __jsx(\"h3\", null, stream.identity, isLocal ? \" (moi)\" : \"\"), __jsx(\"video\", {\n      ref: videoRef,\n      autoPlay: true\n    }), __jsx(\"audio\", {\n      ref: audioRef,\n      autoPlay: true,\n      muted: !audioEnabled\n    }), getAudioButtons(), getVideoButtons()));\n  } else {\n    return __jsx(\"div\", {\n      className: \"participant\",\n      style: isLocal ? {\n        width: \"100%\"\n      } : {\n        width: \"30%\"\n      }\n    }, __jsx(\"h3\", null, participant.identity, isLocal ? \"(moi)\" : \"\"), __jsx(\"video\", {\n      ref: videoRef,\n      autoPlay: true\n    }), __jsx(\"audio\", {\n      ref: audioRef,\n      autoPlay: true,\n      muted: false\n    }), getAudioButtons(), getVideoButtons());\n  }\n};\n\nexport default Participant;","map":{"version":3,"sources":["/Users/julienjuge/DEVPERSO/video-chat/components/Participant.js"],"names":["AudioMutedOutlined","AudioOutlined","VideoCameraAddOutlined","VideoCameraOutlined","React","useEffect","useRef","useState","Button","Rnd","Participant","participant","isLocal","videoRef","videoTracks","setVideoTracks","audioTracks","setAudioTracks","audioEnabled","setAudioEnabled","videoEnabled","setVideoEnabled","widthLocal","setWidthLocal","heightLocal","setHeighLocal","xLocal","setXLocal","yLocal","setYLocal","getAudioButtons","console","log","e","position","color","getVideoButtons","videoTrack","enable","attach","current","display","alignItems","justifyContent","border","background","width","height","x","y","d","direction","ref","delta","offsetWidth","offsetHeight","marginRight","stream","identity","audioRef"],"mappings":"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","sourcesContent":["import {\n  AudioMutedOutlined,\n  AudioOutlined,\n  VideoCameraAddOutlined,\n  VideoCameraOutlined\n} from \"@ant-design/icons\";\nimport React, { useEffect, useRef, useState } from \"react\";\n\nimport { Button } from \"antd\";\nimport { Rnd } from \"react-rnd\";\n\nconst Participant = ({ participant, isLocal, videoRef }) => {\n  const [videoTracks, setVideoTracks] = useState([]);\n  const [audioTracks, setAudioTracks] = useState([]);\n  const [audioEnabled, setAudioEnabled] = useState(false);\n  const [videoEnabled, setVideoEnabled] = useState(true);\n  const [widthLocal, setWidthLocal] = useState(270);\n  const [heightLocal, setHeighLocal] = useState(270);\n  const [xLocal, setXLocal] = useState(1);\n  const [yLocal, setYLocal] = useState(1);\n  useEffect(() => {\n    return () => {\n      setVideoTracks([]);\n      setAudioTracks([]);\n    };\n  }, [participant]);\n\n  const getAudioButtons = () => {\n    console.log(\"audio buttons\");\n    if (isLocal === true) {\n      if (audioEnabled) {\n        return (\n          <Button\n            onClick={e => setAudioEnabled(false)}\n            style={{ position: \"relative\" }}\n            type=\"primary\"\n            shape=\"circle\"\n            icon={<AudioMutedOutlined />}\n          />\n        );\n      } else {\n        return (\n          <Button\n            onClick={e => setAudioEnabled(true)}\n            style={{ position: \"relative\", color: \"red\" }}\n            type=\"primary\"\n            shape=\"circle\"\n            icon={<AudioOutlined />}\n          />\n        );\n      }\n    }\n    return <div></div>;\n  };\n\n  const getVideoButtons = () => {\n    if (isLocal === true) {\n      if (videoEnabled) {\n        return (\n          <Button\n            onClick={e => {\n              setVideoEnabled(false);\n              const videoTrack = videoTracks[0];\n              if (videoTrack) {\n                videoTrack.enable(false);\n                videoTrack.attach(videoRef.current);\n              }\n            }}\n            style={{ position: \"relative\" }}\n            type=\"primary\"\n            shape=\"circle\"\n            icon={<VideoCameraOutlined />}\n          />\n        );\n      } else {\n        return (\n          <Button\n            onClick={e => {\n              setVideoEnabled(true);\n              const videoTrack = videoTracks[0];\n              if (videoTrack) {\n                videoTrack.enable(true);\n                videoTrack.attach(videoRef.current);\n              }\n            }}\n            style={{ position: \"relative\", color: \"red\" }}\n            type=\"primary\"\n            shape=\"circle\"\n            icon={<VideoCameraOutlined />}\n          />\n        );\n      }\n    }\n    return <div></div>;\n  };\n  if (isLocal) {\n    return (\n      <Rnd\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          border: \"solid 1px #ddd\",\n          background: \"#f0f0f0\"\n        }}\n        size={{ width: widthLocal, height: heightLocal }}\n        position={{ x: xLocal, y: yLocal }}\n        onDragStop={(e, d) => {\n          setXLocal(d.x);\n          setYLocal(d.y);\n        }}\n        onResizeStop={(e, direction, ref, delta, position) => {\n          setWidthLocal(ref.offsetWidth);\n          setHeighLocal(ref.offsetHeight);\n          console.log(position);\n        }}\n      >\n        <div\n          className=\"participant\"\n          style={{ marginRight: 0, width: \"99%\", height: \"99%\" }}\n        >\n          <h3>\n            {stream.identity}\n            {isLocal ? \" (moi)\" : \"\"}\n          </h3>\n          <video ref={videoRef} autoPlay={true} />\n          <audio ref={audioRef} autoPlay={true} muted={!audioEnabled} />\n\n          {getAudioButtons()}\n          {getVideoButtons()}\n        </div>\n      </Rnd>\n    );\n  } else {\n    return (\n      <div\n        className=\"participant\"\n        style={isLocal ? { width: \"100%\" } : { width: \"30%\" }}\n      >\n        <h3>\n          {participant.identity}\n          {isLocal ? \"(moi)\" : \"\"}\n        </h3>\n        <video ref={videoRef} autoPlay={true} />\n        <audio ref={audioRef} autoPlay={true} muted={false} />\n\n        {getAudioButtons()}\n        {getVideoButtons()}\n      </div>\n    );\n  }\n};\n\nexport default Participant;\n"]},"metadata":{},"sourceType":"module"}