{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Participant from \"./Participant\";\nimport React from \"react\";\nimport VideoCall from \"../helpers/simple-peer\";\nimport create from \"@ant-design/icons/lib/components/IconFont\";\nimport { getDisplayStream } from \"../helpers/media-access\";\n\nconst io = require(\"socket.io-client\");\n\nconst socket = io(process.env.reactAppSignalingServer);\n\nclass Room extends React.Component {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"videoCall\", new VideoCall());\n\n    _defineProperty(this, \"enter\", roomId => {\n      console.log(\"enter in \" + roomId);\n      this.setState({\n        connecting: true\n      });\n      const peer = this.videoCall.init(this.state.localStream, this.state.initiator);\n      this.setState({\n        peer\n      });\n      this.state.peerIds.push(peer._id);\n      peer.on(\"signal\", data => {\n        console.log(\"signal peer\");\n        const signal = {\n          room: roomId,\n          desc: data\n        };\n        this.state.socket.emit(\"signal\", signal);\n      });\n      peer.on(\"stream\", stream => {\n        console.log(\"stream peer\");\n        this.remoteVideo.srcObject = stream;\n        this.setState({\n          connecting: false,\n          waiting: false\n        });\n      });\n      peer.on(\"error\", function (err) {\n        console.log(err);\n      });\n    });\n\n    _defineProperty(this, \"call\", otherId => {\n      console.log(\"callllllll\");\n      this.videoCall.connect(otherId);\n    });\n\n    _defineProperty(this, \"renderFull\", () => {\n      if (this.state.full) {\n        return \"The room is full\";\n      }\n    });\n\n    _defineProperty(this, \"disableVideo\", () => {\n      const videoTrack = localStream.getVideoTracks()[0];\n\n      if (localStream) {\n        videoTrack.enabled = false;\n        this.setState({\n          videoEnabled: false\n        });\n      }\n    });\n\n    _defineProperty(this, \"enableVideo\", () => {\n      const videoTrack = localStream.getVideoTracks()[0];\n\n      if (localStream) {\n        videoTrack.enabled = true;\n        this.setState({\n          videoEnabled: true\n        });\n      }\n    });\n\n    _defineProperty(this, \"setAudioEnabled\", bool => {\n      this.setState({\n        audioEnabled: bool\n      });\n    });\n\n    this.state = {\n      localStream: {},\n      remoteStreamUrl: \"\",\n      streamUrl: \"\",\n      initiator: false,\n      peer: {},\n      full: false,\n      connecting: false,\n      waiting: true,\n      peerIds: [],\n      audioEnabled: false,\n      videoEnabled: true\n    };\n  }\n\n  componentDidMount() {\n    const socket = io(process.env.REACT_APP_SIGNALING_SERVER);\n    const component = this;\n    this.setState({\n      socket\n    });\n    const {\n      roomId\n    } = this.props;\n    this.getUserMedia().then(() => {\n      socket.emit(\"join\", {\n        roomId: roomId\n      });\n    });\n    socket.on(\"init\", () => {\n      component.setState({\n        initiator: true\n      });\n    });\n    socket.on(\"ready\", () => {\n      console.log(\"c'est ok on rentre dans \" + roomId);\n      component.enter(roomId);\n    });\n    socket.on(\"desc\", data => {\n      console.log(data);\n      console.log(data.type === \"offer\" && component.state.initiator);\n      console.log(data.type === \"answer\" && !component.state.initiator);\n      if (data.type === \"offer\" && component.state.initiator) return;\n      if (data.type === \"answer\" && !component.state.initiator) return;\n      console.log(\"ok on appelle\");\n      if (component.state.connecting) component.call(data);\n    });\n    socket.on(\"disconnected\", () => {\n      console.log(\"il est parti\");\n      component.setState({\n        initiator: true\n      });\n    });\n    socket.on(\"full\", () => {\n      console.log(\"c'est plein\");\n      component.setState({\n        full: true\n      });\n    });\n  }\n\n  getUserMedia(cb) {\n    return new Promise((resolve, reject) => {\n      navigator.getUserMedia = navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\n      const op = {\n        video: {\n          width: {\n            min: 160,\n            ideal: 640,\n            max: 1280\n          },\n          height: {\n            min: 120,\n            ideal: 360,\n            max: 720\n          }\n        },\n        audio: true\n      };\n      navigator.getUserMedia(op, stream => {\n        this.setState({\n          streamUrl: stream,\n          localStream: stream\n        });\n        this.localVideo.srcObject = stream;\n        resolve();\n      }, () => {});\n    });\n  }\n\n  getDisplay() {\n    getDisplayStream().then(stream => {\n      stream.oninactive = () => {\n        this.state.peer.removeStream(this.state.localStream);\n        this.getUserMedia().then(() => {\n          this.state.peer.addStream(this.state.localStream);\n        });\n      };\n\n      this.setState({\n        streamUrl: stream,\n        localStream: stream\n      });\n      this.localVideo.srcObject = stream;\n      this.state.peer.addStream(stream);\n    });\n  }\n\n  render() {\n    console.log(this.state.peerIds);\n    const {\n      username,\n      roomId\n    } = this.props;\n    const {\n      connecting,\n      waiting,\n      localStream,\n      audioEnabled,\n      videoEnabled\n    } = this.state;\n    return __jsx(\"div\", {\n      className: \"room\"\n    }, __jsx(\"h2\", null, \"Salle: \", roomId), connecting && __jsx(\"div\", null, __jsx(\"p\", null, \"Establishing connection...\")), waiting && __jsx(\"div\", null, __jsx(\"p\", null, \"Waiting for someone...\")), __jsx(Participant, {\n      isLocal: false,\n      video: __jsx(\"div\", null, __jsx(\"video\", {\n        autoPlay: true,\n        id: \"remoteVideo\",\n        ref: video => this.remoteVideo = video\n      }))\n    }), __jsx(\"div\", {\n      className: \"local-participant\"\n    }, localStream !== undefined ? __jsx(Participant, {\n      isLocal: true,\n      key: \"fneoisfnoes\",\n      name: username,\n      video: __jsx(\"div\", null, __jsx(\"video\", {\n        autoPlay: true,\n        id: \"localVideo\",\n        muted: true,\n        ref: video => this.localVideo = video\n      })),\n      setAudioEnabled: this.setAudioEnabled,\n      audioEnabled: audioEnabled,\n      disableVideo: this.disableVideo,\n      enableVideo: this.enableVideo,\n      videoEnabled: videoEnabled\n    }) : \"\"));\n  }\n\n}\n\nexport default Room;","map":{"version":3,"sources":["/Users/julienjuge/DEVPERSO/video-chat/components/Room.js"],"names":["Participant","React","VideoCall","create","getDisplayStream","io","require","socket","process","env","reactAppSignalingServer","Room","Component","constructor","roomId","console","log","setState","connecting","peer","videoCall","init","state","localStream","initiator","peerIds","push","_id","on","data","signal","room","desc","emit","stream","remoteVideo","srcObject","waiting","err","otherId","connect","full","videoTrack","getVideoTracks","enabled","videoEnabled","bool","audioEnabled","remoteStreamUrl","streamUrl","componentDidMount","REACT_APP_SIGNALING_SERVER","component","props","getUserMedia","then","enter","type","call","cb","Promise","resolve","reject","navigator","webkitGetUserMedia","mozGetUserMedia","op","video","width","min","ideal","max","height","audio","localVideo","getDisplay","oninactive","removeStream","addStream","render","username","undefined","setAudioEnabled","disableVideo","enableVideo"],"mappings":"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","sourcesContent":["import Participant from \"./Participant\";\nimport React from \"react\";\nimport VideoCall from \"../helpers/simple-peer\";\nimport create from \"@ant-design/icons/lib/components/IconFont\";\nimport { getDisplayStream } from \"../helpers/media-access\";\n\nconst io = require(\"socket.io-client\");\nconst socket = io(process.env.reactAppSignalingServer);\n\nclass Room extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      localStream: {},\n      remoteStreamUrl: \"\",\n      streamUrl: \"\",\n      initiator: false,\n      peer: {},\n      full: false,\n      connecting: false,\n      waiting: true,\n      peerIds: [],\n      audioEnabled: false,\n      videoEnabled: true\n    };\n  }\n  videoCall = new VideoCall();\n  componentDidMount() {\n    const socket = io(process.env.REACT_APP_SIGNALING_SERVER);\n    const component = this;\n    this.setState({ socket });\n    const { roomId } = this.props;\n    this.getUserMedia().then(() => {\n      socket.emit(\"join\", { roomId: roomId });\n    });\n    socket.on(\"init\", () => {\n      component.setState({ initiator: true });\n    });\n    socket.on(\"ready\", () => {\n      console.log(\"c'est ok on rentre dans \" + roomId);\n      component.enter(roomId);\n    });\n    socket.on(\"desc\", data => {\n      console.log(data);\n      console.log(data.type === \"offer\" && component.state.initiator);\n      console.log(data.type === \"answer\" && !component.state.initiator);\n      if (data.type === \"offer\" && component.state.initiator) return;\n      if (data.type === \"answer\" && !component.state.initiator) return;\n      console.log(\"ok on appelle\");\n      if (component.state.connecting) component.call(data);\n    });\n    socket.on(\"disconnected\", () => {\n      console.log(\"il est parti\");\n      component.setState({ initiator: true });\n    });\n    socket.on(\"full\", () => {\n      console.log(\"c'est plein\");\n      component.setState({ full: true });\n    });\n  }\n  getUserMedia(cb) {\n    return new Promise((resolve, reject) => {\n      navigator.getUserMedia = navigator.getUserMedia =\n        navigator.getUserMedia ||\n        navigator.webkitGetUserMedia ||\n        navigator.mozGetUserMedia;\n      const op = {\n        video: {\n          width: { min: 160, ideal: 640, max: 1280 },\n          height: { min: 120, ideal: 360, max: 720 }\n        },\n        audio: true\n      };\n      navigator.getUserMedia(\n        op,\n        stream => {\n          this.setState({ streamUrl: stream, localStream: stream });\n          this.localVideo.srcObject = stream;\n          resolve();\n        },\n        () => {}\n      );\n    });\n  }\n  getDisplay() {\n    getDisplayStream().then(stream => {\n      stream.oninactive = () => {\n        this.state.peer.removeStream(this.state.localStream);\n        this.getUserMedia().then(() => {\n          this.state.peer.addStream(this.state.localStream);\n        });\n      };\n      this.setState({ streamUrl: stream, localStream: stream });\n      this.localVideo.srcObject = stream;\n      this.state.peer.addStream(stream);\n    });\n  }\n  enter = roomId => {\n    console.log(\"enter in \" + roomId);\n    this.setState({ connecting: true });\n    const peer = this.videoCall.init(\n      this.state.localStream,\n      this.state.initiator\n    );\n    this.setState({ peer });\n    this.state.peerIds.push(peer._id);\n\n    peer.on(\"signal\", data => {\n      console.log(\"signal peer\");\n      const signal = {\n        room: roomId,\n        desc: data\n      };\n      this.state.socket.emit(\"signal\", signal);\n    });\n    peer.on(\"stream\", stream => {\n      console.log(\"stream peer\");\n      this.remoteVideo.srcObject = stream;\n      this.setState({ connecting: false, waiting: false });\n    });\n    peer.on(\"error\", function(err) {\n      console.log(err);\n    });\n  };\n  call = otherId => {\n    console.log(\"callllllll\");\n    this.videoCall.connect(otherId);\n  };\n  renderFull = () => {\n    if (this.state.full) {\n      return \"The room is full\";\n    }\n  };\n\n  disableVideo = () => {\n    const videoTrack = localStream.getVideoTracks()[0];\n\n    if (localStream) {\n      videoTrack.enabled = false;\n      this.setState({ videoEnabled: false });\n    }\n  };\n\n  enableVideo = () => {\n    const videoTrack = localStream.getVideoTracks()[0];\n\n    if (localStream) {\n      videoTrack.enabled = true;\n      this.setState({ videoEnabled: true });\n    }\n  };\n\n  setAudioEnabled = bool => {\n    this.setState({ audioEnabled: bool });\n  };\n\n  render() {\n    console.log(this.state.peerIds);\n    const { username, roomId } = this.props;\n    const {\n      connecting,\n      waiting,\n      localStream,\n      audioEnabled,\n      videoEnabled\n    } = this.state;\n    return (\n      <div className=\"room\">\n        <h2>Salle: {roomId}</h2>\n        {connecting && (\n          <div>\n            <p>Establishing connection...</p>\n          </div>\n        )}\n        {waiting && (\n          <div>\n            <p>Waiting for someone...</p>\n          </div>\n        )}\n\n        <Participant\n          isLocal={false}\n          video={\n            <div>\n              <video\n                autoPlay\n                id=\"remoteVideo\"\n                ref={video => (this.remoteVideo = video)}\n              />\n            </div>\n          }\n        />\n\n        <div className=\"local-participant\">\n          {localStream !== undefined ? (\n            <Participant\n              isLocal={true}\n              key={\"fneoisfnoes\"}\n              name={username}\n              video={\n                <div>\n                  <video\n                    autoPlay\n                    id=\"localVideo\"\n                    muted\n                    ref={video => (this.localVideo = video)}\n                  />\n                </div>\n              }\n              setAudioEnabled={this.setAudioEnabled}\n              audioEnabled={audioEnabled}\n              disableVideo={this.disableVideo}\n              enableVideo={this.enableVideo}\n              videoEnabled={videoEnabled}\n            />\n          ) : (\n            \"\"\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Room;\n"]},"metadata":{},"sourceType":"module"}