{"ast":null,"code":"const twilio = require(\"twilio\");\n\nconst AccessToken = twilio.jwt.AccessToken;\nconst {\n  VideoGrant\n} = AccessToken;\nconst config = {\n  accountSid: process.env.TWILIO_ACCOUNT_SID,\n  apiKey: process.env.TWILIO_API_KEY,\n  apiSecret: process.env.TWILIO_API_SECRET\n};\n\nconst generateToken = config => {\n  return new AccessToken(config.accountSid, config.apiKey, config.apiSecret);\n};\n\nconst videoToken = (identity, room, config) => {\n  let videoGrant;\n\n  if (typeof room !== \"undefined\") {\n    videoGrant = new VideoGrant({\n      room\n    });\n  } else {\n    videoGrant = new VideoGrant();\n  }\n\n  const token = generateToken(config);\n  token.addGrant(videoGrant);\n  token.identity = identity;\n  return token;\n};\n\nexport default ((req, res) => {\n  console.log(process.env);\n\n  if (req.method === \"POST\") {\n    // Process a POST request\n    const identity = req.body.identity;\n    const room = req.body.room;\n    const token = videoToken(identity, room, config);\n    res.set(\"Content-Type\", \"application/json\");\n    res.send(JSON.stringify({\n      token: token.toJwt()\n    }));\n  }\n});","map":{"version":3,"sources":["/Users/julienjuge/DEVPERSO/video-chat/pages/api/video/token.js"],"names":["twilio","require","AccessToken","jwt","VideoGrant","config","accountSid","process","env","TWILIO_ACCOUNT_SID","apiKey","TWILIO_API_KEY","apiSecret","TWILIO_API_SECRET","generateToken","videoToken","identity","room","videoGrant","token","addGrant","req","res","console","log","method","body","set","send","JSON","stringify","toJwt"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMC,WAAW,GAAGF,MAAM,CAACG,GAAP,CAAWD,WAA/B;AACA,MAAM;AAAEE,EAAAA;AAAF,IAAiBF,WAAvB;AAEA,MAAMG,MAAM,GAAG;AACbC,EAAAA,UAAU,EAAEC,OAAO,CAACC,GAAR,CAAYC,kBADX;AAEbC,EAAAA,MAAM,EAAEH,OAAO,CAACC,GAAR,CAAYG,cAFP;AAGbC,EAAAA,SAAS,EAAEL,OAAO,CAACC,GAAR,CAAYK;AAHV,CAAf;;AAMA,MAAMC,aAAa,GAAGT,MAAM,IAAI;AAC9B,SAAO,IAAIH,WAAJ,CAAgBG,MAAM,CAACC,UAAvB,EAAmCD,MAAM,CAACK,MAA1C,EAAkDL,MAAM,CAACO,SAAzD,CAAP;AACD,CAFD;;AAIA,MAAMG,UAAU,GAAG,CAACC,QAAD,EAAWC,IAAX,EAAiBZ,MAAjB,KAA4B;AAC7C,MAAIa,UAAJ;;AACA,MAAI,OAAOD,IAAP,KAAgB,WAApB,EAAiC;AAC/BC,IAAAA,UAAU,GAAG,IAAId,UAAJ,CAAe;AAAEa,MAAAA;AAAF,KAAf,CAAb;AACD,GAFD,MAEO;AACLC,IAAAA,UAAU,GAAG,IAAId,UAAJ,EAAb;AACD;;AACD,QAAMe,KAAK,GAAGL,aAAa,CAACT,MAAD,CAA3B;AACAc,EAAAA,KAAK,CAACC,QAAN,CAAeF,UAAf;AACAC,EAAAA,KAAK,CAACH,QAAN,GAAiBA,QAAjB;AACA,SAAOG,KAAP;AACD,CAXD;;AAaA,gBAAe,CAACE,GAAD,EAAMC,GAAN,KAAc;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAYjB,OAAO,CAACC,GAApB;;AACA,MAAIa,GAAG,CAACI,MAAJ,KAAe,MAAnB,EAA2B;AACzB;AACA,UAAMT,QAAQ,GAAGK,GAAG,CAACK,IAAJ,CAASV,QAA1B;AACA,UAAMC,IAAI,GAAGI,GAAG,CAACK,IAAJ,CAAST,IAAtB;AACA,UAAME,KAAK,GAAGJ,UAAU,CAACC,QAAD,EAAWC,IAAX,EAAiBZ,MAAjB,CAAxB;AACAiB,IAAAA,GAAG,CAACK,GAAJ,CAAQ,cAAR,EAAwB,kBAAxB;AACAL,IAAAA,GAAG,CAACM,IAAJ,CACEC,IAAI,CAACC,SAAL,CAAe;AACbX,MAAAA,KAAK,EAAEA,KAAK,CAACY,KAAN;AADM,KAAf,CADF;AAKD;AACF,CAdD","sourcesContent":["const twilio = require(\"twilio\");\nconst AccessToken = twilio.jwt.AccessToken;\nconst { VideoGrant } = AccessToken;\n\nconst config = {\n  accountSid: process.env.TWILIO_ACCOUNT_SID,\n  apiKey: process.env.TWILIO_API_KEY,\n  apiSecret: process.env.TWILIO_API_SECRET\n};\n\nconst generateToken = config => {\n  return new AccessToken(config.accountSid, config.apiKey, config.apiSecret);\n};\n\nconst videoToken = (identity, room, config) => {\n  let videoGrant;\n  if (typeof room !== \"undefined\") {\n    videoGrant = new VideoGrant({ room });\n  } else {\n    videoGrant = new VideoGrant();\n  }\n  const token = generateToken(config);\n  token.addGrant(videoGrant);\n  token.identity = identity;\n  return token;\n};\n\nexport default (req, res) => {\n  console.log(process.env);\n  if (req.method === \"POST\") {\n    // Process a POST request\n    const identity = req.body.identity;\n    const room = req.body.room;\n    const token = videoToken(identity, room, config);\n    res.set(\"Content-Type\", \"application/json\");\n    res.send(\n      JSON.stringify({\n        token: token.toJwt()\n      })\n    );\n  }\n};\n"]},"metadata":{},"sourceType":"module"}