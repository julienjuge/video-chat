{"ast":null,"code":"var __jsx = React.createElement;\nimport { AudioMutedOutlined, AudioOutlined, VideoCameraAddOutlined, VideoCameraOutlined } from \"@ant-design/icons\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Button } from \"antd\";\nimport { Rnd } from \"react-rnd\";\n\nconst Participant = ({\n  participant,\n  isLocal,\n  video,\n  name,\n  setAudioEnabled,\n  audioEnabled,\n  disableVideo,\n  enableVideo\n}) => {\n  const {\n    0: videoTracks,\n    1: setVideoTracks\n  } = useState([]);\n  const {\n    0: audioTracks,\n    1: setAudioTracks\n  } = useState([]);\n  const {\n    0: widthLocal,\n    1: setWidthLocal\n  } = useState(270);\n  const {\n    0: heightLocal,\n    1: setHeighLocal\n  } = useState(270);\n  const {\n    0: xLocal,\n    1: setXLocal\n  } = useState(1);\n  const {\n    0: yLocal,\n    1: setYLocal\n  } = useState(1);\n  useEffect(() => {\n    return () => {\n      setVideoTracks([]);\n      setAudioTracks([]);\n    };\n  }, [participant]);\n\n  const getAudioButtons = () => {\n    console.log(\"audio buttons\");\n\n    if (isLocal === true) {\n      if (audioEnabled) {\n        return __jsx(Button, {\n          onClick: e => setAudioEnabled(false),\n          style: {\n            position: \"relative\"\n          },\n          type: \"primary\",\n          shape: \"circle\",\n          icon: __jsx(AudioMutedOutlined, null)\n        });\n      } else {\n        return __jsx(Button, {\n          onClick: e => setAudioEnabled(true),\n          style: {\n            position: \"relative\",\n            color: \"red\"\n          },\n          type: \"primary\",\n          shape: \"circle\",\n          icon: __jsx(AudioOutlined, null)\n        });\n      }\n    }\n\n    return __jsx(\"div\", null);\n  };\n\n  const getVideoButtons = () => {\n    if (isLocal === true) {\n      if (videoEnabled) {\n        return __jsx(Button, {\n          onClick: e => {\n            disableVideo();\n          },\n          style: {\n            position: \"relative\"\n          },\n          type: \"primary\",\n          shape: \"circle\",\n          icon: __jsx(VideoCameraOutlined, null)\n        });\n      } else {\n        return __jsx(Button, {\n          onClick: e => {\n            enableVideo();\n          },\n          style: {\n            position: \"relative\",\n            color: \"red\"\n          },\n          type: \"primary\",\n          shape: \"circle\",\n          icon: __jsx(VideoCameraOutlined, null)\n        });\n      }\n    }\n\n    return __jsx(\"div\", null);\n  };\n\n  if (isLocal) {\n    return __jsx(Rnd, {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        border: \"solid 1px #ddd\",\n        background: \"#f0f0f0\"\n      },\n      size: {\n        width: widthLocal,\n        height: heightLocal\n      },\n      position: {\n        x: xLocal,\n        y: yLocal\n      },\n      onDragStop: (e, d) => {\n        setXLocal(d.x);\n        setYLocal(d.y);\n      },\n      onResizeStop: (e, direction, ref, delta, position) => {\n        setWidthLocal(ref.offsetWidth);\n        setHeighLocal(ref.offsetHeight);\n        console.log(position);\n      }\n    }, __jsx(\"div\", {\n      className: \"participant\",\n      style: {\n        marginRight: 0,\n        width: \"99%\",\n        height: \"99%\"\n      }\n    }, __jsx(\"h3\", null, name, isLocal ? \" (moi)\" : \"\"), video, getAudioButtons(), getVideoButtons()));\n  } else {\n    return __jsx(\"div\", {\n      className: \"participant\",\n      style: isLocal ? {\n        width: \"100%\"\n      } : {\n        width: \"30%\"\n      }\n    }, __jsx(\"h3\", null, name, isLocal ? \"(moi)\" : \"\"), video, getAudioButtons(), getVideoButtons());\n  }\n};\n\nexport default Participant;","map":{"version":3,"sources":["/Users/julienjuge/DEVPERSO/video-chat/components/Participant.js"],"names":["AudioMutedOutlined","AudioOutlined","VideoCameraAddOutlined","VideoCameraOutlined","React","useEffect","useRef","useState","Button","Rnd","Participant","participant","isLocal","video","name","setAudioEnabled","audioEnabled","disableVideo","enableVideo","videoTracks","setVideoTracks","audioTracks","setAudioTracks","widthLocal","setWidthLocal","heightLocal","setHeighLocal","xLocal","setXLocal","yLocal","setYLocal","getAudioButtons","console","log","e","position","color","getVideoButtons","videoEnabled","display","alignItems","justifyContent","border","background","width","height","x","y","d","direction","ref","delta","offsetWidth","offsetHeight","marginRight"],"mappings":"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","sourcesContent":["import {\n  AudioMutedOutlined,\n  AudioOutlined,\n  VideoCameraAddOutlined,\n  VideoCameraOutlined\n} from \"@ant-design/icons\";\nimport React, { useEffect, useRef, useState } from \"react\";\n\nimport { Button } from \"antd\";\nimport { Rnd } from \"react-rnd\";\n\nconst Participant = ({\n  participant,\n  isLocal,\n  video,\n  name,\n  setAudioEnabled,\n  audioEnabled,\n  disableVideo,\n  enableVideo\n}) => {\n  const [videoTracks, setVideoTracks] = useState([]);\n  const [audioTracks, setAudioTracks] = useState([]);\n  const [widthLocal, setWidthLocal] = useState(270);\n  const [heightLocal, setHeighLocal] = useState(270);\n  const [xLocal, setXLocal] = useState(1);\n  const [yLocal, setYLocal] = useState(1);\n  useEffect(() => {\n    return () => {\n      setVideoTracks([]);\n      setAudioTracks([]);\n    };\n  }, [participant]);\n\n  const getAudioButtons = () => {\n    console.log(\"audio buttons\");\n    if (isLocal === true) {\n      if (audioEnabled) {\n        return (\n          <Button\n            onClick={e => setAudioEnabled(false)}\n            style={{ position: \"relative\" }}\n            type=\"primary\"\n            shape=\"circle\"\n            icon={<AudioMutedOutlined />}\n          />\n        );\n      } else {\n        return (\n          <Button\n            onClick={e => setAudioEnabled(true)}\n            style={{ position: \"relative\", color: \"red\" }}\n            type=\"primary\"\n            shape=\"circle\"\n            icon={<AudioOutlined />}\n          />\n        );\n      }\n    }\n    return <div></div>;\n  };\n\n  const getVideoButtons = () => {\n    if (isLocal === true) {\n      if (videoEnabled) {\n        return (\n          <Button\n            onClick={e => {\n              disableVideo();\n            }}\n            style={{ position: \"relative\" }}\n            type=\"primary\"\n            shape=\"circle\"\n            icon={<VideoCameraOutlined />}\n          />\n        );\n      } else {\n        return (\n          <Button\n            onClick={e => {\n              enableVideo();\n            }}\n            style={{ position: \"relative\", color: \"red\" }}\n            type=\"primary\"\n            shape=\"circle\"\n            icon={<VideoCameraOutlined />}\n          />\n        );\n      }\n    }\n    return <div></div>;\n  };\n  if (isLocal) {\n    return (\n      <Rnd\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          border: \"solid 1px #ddd\",\n          background: \"#f0f0f0\"\n        }}\n        size={{ width: widthLocal, height: heightLocal }}\n        position={{ x: xLocal, y: yLocal }}\n        onDragStop={(e, d) => {\n          setXLocal(d.x);\n          setYLocal(d.y);\n        }}\n        onResizeStop={(e, direction, ref, delta, position) => {\n          setWidthLocal(ref.offsetWidth);\n          setHeighLocal(ref.offsetHeight);\n          console.log(position);\n        }}\n      >\n        <div\n          className=\"participant\"\n          style={{ marginRight: 0, width: \"99%\", height: \"99%\" }}\n        >\n          <h3>\n            {name}\n            {isLocal ? \" (moi)\" : \"\"}\n          </h3>\n          {video}\n\n          {getAudioButtons()}\n          {getVideoButtons()}\n        </div>\n      </Rnd>\n    );\n  } else {\n    return (\n      <div\n        className=\"participant\"\n        style={isLocal ? { width: \"100%\" } : { width: \"30%\" }}\n      >\n        <h3>\n          {name}\n          {isLocal ? \"(moi)\" : \"\"}\n        </h3>\n        {video}\n        {getAudioButtons()}\n        {getVideoButtons()}\n      </div>\n    );\n  }\n};\n\nexport default Participant;\n"]},"metadata":{},"sourceType":"module"}