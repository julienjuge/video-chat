{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useCallback, useState } from \"react\";\nimport Lobby from \"./Lobby\";\n\nconst VideoChat = () => {\n  const {\n    0: username,\n    1: setUsername\n  } = useState(\"\");\n  const {\n    0: roomName,\n    1: setRoomName\n  } = useState(\"\");\n  const {\n    0: token,\n    1: setToken\n  } = useState(null);\n  const handleUsernameChange = useCallback(event => {\n    setUsername(event.target.value);\n  }, []);\n  const handleRoomNameChange = useCallback(event => {\n    setRoomName(event.target.value);\n  }, []);\n  const handleSubmit = useCallback(async event => {\n    event.preventDefault();\n    const data = await fetch(\"/api/video/token\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        identity: username,\n        room: roomName\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json());\n    setToken(data.token);\n  }, [username, roomName]);\n  const handleLogout = useCallback(event => {\n    setToken(null);\n  }, []);\n  let render;\n\n  if (token) {\n    render = __jsx(\"div\", null, __jsx(\"p\", null, \"Username: \", username), __jsx(\"p\", null, \"Room name: \", roomName), __jsx(\"p\", null, \"Token: \", token));\n  } else {\n    render = __jsx(Lobby, {\n      username: username,\n      roomName: roomName,\n      handleUsernameChange: handleUsernameChange,\n      handleRoomNameChange: handleRoomNameChange,\n      handleSubmit: handleSubmit\n    });\n  }\n\n  return render;\n};\n\nexport default VideoChat;","map":null,"metadata":{},"sourceType":"module"}