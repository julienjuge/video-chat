{"ast":null,"code":"var _jsxFileName = \"/Users/julienjuge/DEVPERSO/video-chat/components/Room.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport Video from \"twilio-video\";\n\nconst Room = ({\n  roomName,\n  token,\n  handleLogout\n}) => {\n  const {\n    0: room,\n    1: setRoom\n  } = useState(null);\n  const {\n    0: participants,\n    1: setParticipants\n  } = useState([]);\n  const remoteParticipants = participants.map(participant => __jsx(\"p\", {\n    key: participant.sid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, \"participant.identity\"));\n  useEffect(() => {\n    const participantConnected = participant => {\n      setParticipants(prevParticipants => [...prevParticipants, participant]);\n    };\n\n    const participantDisconnected = participant => {\n      setParticipants(prevParticipants => prevParticipants.filter(p => p !== participant));\n    };\n\n    Video.connect(token, {\n      name: roomName\n    }).then(room => {\n      setRoom(room);\n      room.on(\"participantConnected\", participantConnected);\n      room.on(\"participantDisconnected\", participantDisconnected);\n      room.participants.forEach(participantConnected);\n    });\n    return () => {\n      setRoom(currentRoom => {\n        if (currentRoom && currentRoom.localParticipant.state === \"connected\") {\n          currentRoom.localParticipant.tracks.forEach(function (trackPublication) {\n            trackPublication.track.stop();\n          });\n          currentRoom.disconnect();\n          return null;\n        } else {\n          return currentRoom;\n        }\n      });\n    };\n  }, [roomName, token]);\n  return __jsx(\"div\", {\n    className: \"room\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"Salle: \", roomName), __jsx(\"button\", {\n    onClick: handleLogout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"D\\xE9connectation :-D\"), __jsx(\"div\", {\n    className: \"local-participant\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, room ? __jsx(\"p\", {\n    key: room.localParticipant.sid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, room.localParticipant.identity) : \"\"), __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \"Supprimer connard\"), __jsx(\"div\", {\n    className: \"remote-participants\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, remoteParticipants));\n};\n\nexport default Room;","map":{"version":3,"sources":["/Users/julienjuge/DEVPERSO/video-chat/components/Room.js"],"names":["React","useEffect","useState","Video","Room","roomName","token","handleLogout","room","setRoom","participants","setParticipants","remoteParticipants","map","participant","sid","participantConnected","prevParticipants","participantDisconnected","filter","p","connect","name","then","on","forEach","currentRoom","localParticipant","state","tracks","trackPublication","track","stop","disconnect","identity"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport Video from \"twilio-video\";\n\nconst Room = ({ roomName, token, handleLogout }) => {\n  const [room, setRoom] = useState(null);\n  const [participants, setParticipants] = useState([]);\n  const remoteParticipants = participants.map(participant => (\n    <p key={participant.sid}>participant.identity</p>\n  ));\n\n  useEffect(() => {\n    const participantConnected = participant => {\n      setParticipants(prevParticipants => [...prevParticipants, participant]);\n    };\n    const participantDisconnected = participant => {\n      setParticipants(prevParticipants =>\n        prevParticipants.filter(p => p !== participant)\n      );\n    };\n    Video.connect(token, {\n      name: roomName\n    }).then(room => {\n      setRoom(room);\n      room.on(\"participantConnected\", participantConnected);\n      room.on(\"participantDisconnected\", participantDisconnected);\n      room.participants.forEach(participantConnected);\n    });\n    return () => {\n      setRoom(currentRoom => {\n        if (currentRoom && currentRoom.localParticipant.state === \"connected\") {\n          currentRoom.localParticipant.tracks.forEach(function(\n            trackPublication\n          ) {\n            trackPublication.track.stop();\n          });\n          currentRoom.disconnect();\n          return null;\n        } else {\n          return currentRoom;\n        }\n      });\n    };\n  }, [roomName, token]);\n\n  return (\n    <div className=\"room\">\n      <h2>Salle: {roomName}</h2>\n      <button onClick={handleLogout}>DÃ©connectation :-D</button>\n      <div className=\"local-participant\">\n        {room ? (\n          <p key={room.localParticipant.sid}>\n            {room.localParticipant.identity}\n          </p>\n        ) : (\n          \"\"\n        )}\n      </div>\n      <h3>Supprimer connard</h3>\n      <div className=\"remote-participants\">{remoteParticipants}</div>\n    </div>\n  );\n};\n\nexport default Room;\n"]},"metadata":{},"sourceType":"module"}