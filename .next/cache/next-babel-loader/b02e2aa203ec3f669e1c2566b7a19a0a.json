{"ast":null,"code":"var _jsxFileName = \"/Users/julienjuge/DEVPERSO/video-chat/components/Room.js\";\nvar __jsx = React.createElement;\nimport { Col, Row } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport Participant from \"./Participant\";\nimport Video from \"twilio-video\";\n\nconst Room = ({\n  roomName,\n  token,\n  handleLogout\n}) => {\n  const {\n    0: room,\n    1: setRoom\n  } = useState(null);\n  const {\n    0: participants,\n    1: setParticipants\n  } = useState([]);\n  const remoteParticipants = participants.map(participant => __jsx(Col, {\n    span: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, __jsx(Participant, {\n    isLocal: false,\n    key: participant.sid,\n    participant: participant,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  })));\n  useEffect(() => {\n    const participantConnected = participant => {\n      setParticipants(prevParticipants => [...prevParticipants, participant]);\n    };\n\n    const participantDisconnected = participant => {\n      setParticipants(prevParticipants => prevParticipants.filter(p => p !== participant));\n    };\n\n    Video.connect(token, {\n      name: roomName\n    }).then(room => {\n      setRoom(room);\n      room.on(\"participantConnected\", participantConnected);\n      room.on(\"participantDisconnected\", participantDisconnected);\n      room.participants.forEach(participantConnected);\n    });\n    return () => {\n      setRoom(currentRoom => {\n        if (currentRoom && currentRoom.localParticipant.state === \"connected\") {\n          currentRoom.localParticipant.tracks.forEach(function (trackPublication) {\n            trackPublication.track.stop();\n          });\n          currentRoom.disconnect();\n          return null;\n        } else {\n          return currentRoom;\n        }\n      });\n    };\n  }, [roomName, token]);\n  return __jsx(\"div\", {\n    className: \"room\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"Salle: \", roomName), __jsx(\"button\", {\n    onClick: handleLogout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, \"D\\xE9connectation :-D\"), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, __jsx(Col, {\n    span: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"local-participant\",\n    style: {\n      width: \"20%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, room ? __jsx(Participant, {\n    isLocal: true,\n    key: room.localParticipant.sid,\n    participant: room.localParticipant,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }) : \"\")), remoteParticipants));\n};\n\nexport default Room;","map":{"version":3,"sources":["/Users/julienjuge/DEVPERSO/video-chat/components/Room.js"],"names":["Col","Row","React","useEffect","useState","Participant","Video","Room","roomName","token","handleLogout","room","setRoom","participants","setParticipants","remoteParticipants","map","participant","sid","participantConnected","prevParticipants","participantDisconnected","filter","p","connect","name","then","on","forEach","currentRoom","localParticipant","state","tracks","trackPublication","track","stop","disconnect","width"],"mappings":"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","sourcesContent":["import { Col, Row } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\n\nimport Participant from \"./Participant\";\nimport Video from \"twilio-video\";\n\nconst Room = ({ roomName, token, handleLogout }) => {\n  const [room, setRoom] = useState(null);\n  const [participants, setParticipants] = useState([]);\n  const remoteParticipants = participants.map(participant => (\n    <Col span={6}>\n      <Participant\n        isLocal={false}\n        key={participant.sid}\n        participant={participant}\n      />\n    </Col>\n  ));\n\n  useEffect(() => {\n    const participantConnected = participant => {\n      setParticipants(prevParticipants => [...prevParticipants, participant]);\n    };\n    const participantDisconnected = participant => {\n      setParticipants(prevParticipants =>\n        prevParticipants.filter(p => p !== participant)\n      );\n    };\n    Video.connect(token, {\n      name: roomName\n    }).then(room => {\n      setRoom(room);\n      room.on(\"participantConnected\", participantConnected);\n      room.on(\"participantDisconnected\", participantDisconnected);\n      room.participants.forEach(participantConnected);\n    });\n    return () => {\n      setRoom(currentRoom => {\n        if (currentRoom && currentRoom.localParticipant.state === \"connected\") {\n          currentRoom.localParticipant.tracks.forEach(function(\n            trackPublication\n          ) {\n            trackPublication.track.stop();\n          });\n          currentRoom.disconnect();\n          return null;\n        } else {\n          return currentRoom;\n        }\n      });\n    };\n  }, [roomName, token]);\n\n  return (\n    <div className=\"room\">\n      <h2>Salle: {roomName}</h2>\n      <button onClick={handleLogout}>DÃ©connectation :-D</button>\n      <Row>\n        <Col span={3}>\n          <div className=\"local-participant\" style={{ width: \"20%\" }}>\n            {room ? (\n              <Participant\n                isLocal={true}\n                key={room.localParticipant.sid}\n                participant={room.localParticipant}\n              />\n            ) : (\n              \"\"\n            )}\n          </div>\n        </Col>\n        {remoteParticipants}\n      </Row>\n    </div>\n  );\n};\n\nexport default Room;\n"]},"metadata":{},"sourceType":"module"}