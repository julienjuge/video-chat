{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this;\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Participant from \"./Participant\";\nimport Video from \"twilio-video\";\nimport VideoCall from \"../helpers/simple-peer\";\nimport { getDisplayStream } from \"../helpers/media-access\";\n\nvar io = require(\"socket.io-client\");\n\nvar socket = io(\"http://localhost:3000\");\n\nvar Room = function Room(_ref) {\n  var username = _ref.username,\n      roomId = _ref.roomId,\n      token = _ref.token,\n      handleLogout = _ref.handleLogout;\n\n  var _useState = useState(null),\n      room = _useState[0],\n      setRoom = _useState[1];\n\n  var _useState2 = useState([]),\n      participants = _useState2[0],\n      setParticipants = _useState2[1];\n\n  var _useState3 = useState(),\n      localStream = _useState3[0],\n      setLocalStream = _useState3[1];\n\n  var _useState4 = useState([]),\n      remoteStreamUrl = _useState4[0],\n      setRemoteStreamUrl = _useState4[1];\n\n  var _useState5 = useState(),\n      streamUrl = _useState5[0],\n      setStreamUrl = _useState5[1];\n\n  var _useState6 = useState(),\n      initiator = _useState6[0],\n      setInitiator = _useState6[1];\n\n  var _useState7 = useState(),\n      peer = _useState7[0],\n      setPeer = _useState7[1];\n\n  var _useState8 = useState(),\n      full = _useState8[0],\n      setFull = _useState8[1];\n\n  var _useState9 = useState(),\n      connecting = _useState9[0],\n      setConnecting = _useState9[1];\n\n  var _useState10 = useState(),\n      waiting = _useState10[0],\n      setWaiting = _useState10[1];\n\n  var _useState11 = useState(),\n      socket = _useState11[0],\n      setSocket = _useState11[1];\n\n  var _useState12 = useState(),\n      localVideo = _useState12[0],\n      setLocalVideo = _useState12[1];\n\n  var _useState13 = useState(false),\n      audioEnabled = _useState13[0],\n      setAudioEnabled = _useState13[1];\n\n  var _useState14 = useState(true),\n      videoEnabled = _useState14[0],\n      setVideoEnabled = _useState14[1];\n\n  var videoCall = new VideoCall();\n  var videoRef = useRef();\n  var audioRef = useRef();\n  var remoteParticipants = participants.map(function (participant) {\n    return __jsx(Participant, {\n      isLocal: false,\n      key: participant.sid,\n      participant: participant\n    });\n  });\n  useEffect(function () {\n    var socket = io(process.env.reactAppSignalingServer);\n    console.log(socket);\n    setSocket(socket);\n    getUserMedia().then(function () {\n      console.log(\"join\");\n      socket.emit(\"join\", {\n        roomId: roomId\n      });\n      console.log(\"emit join\");\n    });\n    socket.on(\"peer\", function (msg) {\n      var peerId = msg.peerId;\n      console.log(\"new peer poof!\", peerId);\n\n      if (peerId === socket.id) {\n        return console.log(\"Peer is me :D\", peerId);\n      }\n\n      createPeer(peerId, true, streamUrl);\n    });\n    socket.on(\"init\", function () {\n      console.log(\"init\");\n      setInitiator(true);\n    });\n    socket.on(\"ready\", function () {\n      console.log(\"c'est ok on rentre dans \" + roomId);\n      enter(roomId);\n    });\n    socket.on(\"desc\", function (data) {\n      console.log(\"desc\");\n      if (data.type === \"offer\" && initiator) return;\n      if (data.type === \"answer\" && !initiator) return;\n      call(data);\n    });\n    socket.on(\"disconnected\", function () {\n      console.log(\"il est parti\");\n      setInitiator(true);\n    });\n    socket.on(\"full\", function () {\n      console.log(\"c'est plein\");\n      setFull(true);\n    });\n    /*const participantConnected = participant => {\n      setParticipants(prevParticipants => [...prevParticipants, participant]);\n    };\n    const participantDisconnected = participant => {\n      setParticipants(prevParticipants =>\n        prevParticipants.filter(p => p !== participant)\n      );\n    };\n    Video.connect(token, {\n      name: roomName\n    }).then(room => {\n      setRoom(room);\n      room.on(\"participantConnected\", participantConnected);\n      room.on(\"participantDisconnected\", participantDisconnected);\n      room.participants.forEach(participantConnected);\n    });\n    return () => {\n      setRoom(currentRoom => {\n        if (currentRoom && currentRoom.localParticipant.state === \"connected\") {\n          currentRoom.localParticipant.tracks.forEach(function(\n            trackPublication\n          ) {\n            trackPublication.track.stop();\n          });\n          currentRoom.disconnect();\n          return null;\n        } else {\n          return currentRoom;\n        }\n      });\n    };*/\n  }, []);\n\n  var createPeer = function createPeer(peerId, initiator, stream) {\n    console.log(\"creating new peer\", peerId, initiator);\n    var peer = videoCall.init(stream, initiator);\n    peer.on(\"signal\", function (signal) {\n      var msgId = new Date().getTime();\n      var msg = {\n        msgId: msgId,\n        signal: signal,\n        to: peerId\n      };\n      console.log(\"peer signal sent\", msg);\n      socket.emit(\"signal\", msg);\n    });\n    peer.on(\"stream\", function (stream) {\n      console.log(\"Got peer stream!!!\", peerId, stream);\n      peer.stream = stream; //this.setPeerState(peerId, peer)\n    });\n    peer.on(\"connect\", function () {\n      console.log(\"Connected to peer\", peerId);\n      peer.connected = true; //this.setPeerState(peerId, peer)\n\n      /*peer.send(this.serialize({\n        msg: 'hey man!'\n      }))*/\n    });\n    peer.on(\"data\", function (data) {\n      console.log(\"Data from peer\", peerId, _this.unserialize(data));\n    });\n    peer.on(\"error\", function (e) {\n      console.log(\"Peer error %s:\", peerId, e);\n    }); //this.setPeerState(peerId, peer);\n\n    return peer;\n  };\n\n  var getUserMedia = function getUserMedia(cb) {\n    return new Promise(function (resolve, reject) {\n      navigator.getUserMedia = navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\n      var op = {\n        audio: true,\n        video: true\n      };\n      navigator.getUserMedia(op, function (stream) {\n        console.log(op);\n        console.log(stream);\n        setStreamUrl(stream);\n        setLocalStream(stream);\n        setLocalVideo(stream);\n        videoRef.current.srcObject = stream; //stream.srcObject.attach(videoRef);\n\n        resolve();\n      }, function () {});\n    });\n  };\n\n  var getDisplay = function getDisplay() {\n    getDisplayStream().then(function (stream) {\n      stream.oninactive = function () {\n        _this.state.peer.removeStream(_this.state.localStream);\n\n        _this.getUserMedia().then(function () {\n          _this.state.peer.addStream(_this.state.localStream);\n        });\n      };\n\n      setStreamUrl(stream);\n      setLocalStream(stream);\n      localVideo.srcObject = stream;\n      peer.addStream(stream);\n    });\n  };\n\n  var enter = function enter(roomId) {\n    console.log(roomId);\n    console.log(\"enter\");\n    setConnecting(true);\n    var peer = videoCall.init(localStream, initiator);\n    console.log(peer);\n    setPeer({\n      peer: peer\n    });\n    peer.on(\"signal\", function (data) {\n      console.log(\"signal\");\n      var signal = {\n        room: roomId,\n        desc: data\n      };\n      socket.emit(\"signal\", signal);\n    });\n    peer.on(\"stream\", function (stream) {\n      console.log(\"stream\");\n      remoteStreamUrl.push(stream); //remoteVideo.srcObject = stream;\n\n      setConnecting(false);\n      setWaiting(false);\n    });\n    peer.on(\"error\", function (err) {\n      console.log(err);\n    });\n  };\n\n  var call = function call(otherId) {\n    videoCall.connect(otherId);\n  };\n\n  var renderFull = function renderFull() {\n    if (_this.state.full) {\n      return \"The room is full\";\n    }\n  };\n\n  var disableVideo = function disableVideo() {\n    var videoTrack = localStream.getVideoTracks()[0];\n\n    if (localStream) {\n      videoTrack.enabled = false;\n      setVideoEnabled(false);\n    }\n  };\n\n  var enableVideo = function enableVideo() {\n    var videoTrack = localStream.getVideoTracks()[0];\n\n    if (localStream) {\n      videoTrack.enabled = true;\n      setVideoEnabled(true);\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"room\"\n  }, __jsx(\"h2\", null, \"Salle: \", roomId), connecting && __jsx(\"div\", null, __jsx(\"p\", null, \"Establishing connection...\")), waiting && __jsx(\"div\", null, __jsx(\"p\", null, \"Waiting for someone...\")), __jsx(\"button\", {\n    onClick: handleLogout\n  }, \"D\\xE9connectation :-D\"), remoteParticipants, __jsx(\"div\", {\n    className: \"local-participant\"\n  }, localStream !== undefined ? __jsx(Participant, _defineProperty({\n    isLocal: true,\n    key: localStream.id,\n    name: username,\n    video: __jsx(\"div\", null, __jsx(\"video\", {\n      ref: videoRef,\n      autoPlay: true,\n      muted: !audioEnabled\n    })),\n    setAudioEnabled: setAudioEnabled,\n    audioEnabled: audioEnabled,\n    disableVideo: disableVideo,\n    enableVideo: enableVideo,\n    videoEnabled: videoEnabled\n  }, \"videoEnabled\", videoEnabled)) : \"\"));\n};\n\nexport default Room;","map":{"version":3,"sources":["/Users/julienjuge/DEVPERSO/video-chat/components/Room.js"],"names":["React","useEffect","useRef","useState","Participant","Video","VideoCall","getDisplayStream","io","require","socket","Room","username","roomId","token","handleLogout","room","setRoom","participants","setParticipants","localStream","setLocalStream","remoteStreamUrl","setRemoteStreamUrl","streamUrl","setStreamUrl","initiator","setInitiator","peer","setPeer","full","setFull","connecting","setConnecting","waiting","setWaiting","setSocket","localVideo","setLocalVideo","audioEnabled","setAudioEnabled","videoEnabled","setVideoEnabled","videoCall","videoRef","audioRef","remoteParticipants","map","participant","sid","process","env","reactAppSignalingServer","console","log","getUserMedia","then","emit","on","msg","peerId","id","createPeer","enter","data","type","call","stream","init","signal","msgId","Date","getTime","to","connected","unserialize","e","cb","Promise","resolve","reject","navigator","webkitGetUserMedia","mozGetUserMedia","op","audio","video","current","srcObject","getDisplay","oninactive","state","removeStream","addStream","desc","push","err","otherId","connect","renderFull","disableVideo","videoTrack","getVideoTracks","enabled","enableVideo","undefined"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\n\nimport Participant from \"./Participant\";\nimport Video from \"twilio-video\";\nimport VideoCall from \"../helpers/simple-peer\";\nimport { getDisplayStream } from \"../helpers/media-access\";\n\nconst io = require(\"socket.io-client\");\nconst socket = io(\"http://localhost:3000\");\n\nconst Room = ({ username, roomId, token, handleLogout }) => {\n  const [room, setRoom] = useState(null);\n  const [participants, setParticipants] = useState([]);\n  const [localStream, setLocalStream] = useState();\n  const [remoteStreamUrl, setRemoteStreamUrl] = useState([]);\n  const [streamUrl, setStreamUrl] = useState();\n  const [initiator, setInitiator] = useState();\n  const [peer, setPeer] = useState();\n  const [full, setFull] = useState();\n  const [connecting, setConnecting] = useState();\n  const [waiting, setWaiting] = useState();\n  const [socket, setSocket] = useState();\n  const [localVideo, setLocalVideo] = useState();\n  const [audioEnabled, setAudioEnabled] = useState(false);\n  const [videoEnabled, setVideoEnabled] = useState(true);\n\n  const videoCall = new VideoCall();\n  const videoRef = useRef();\n  const audioRef = useRef();\n\n  const remoteParticipants = participants.map(participant => (\n    <Participant\n      isLocal={false}\n      key={participant.sid}\n      participant={participant}\n    />\n  ));\n\n  useEffect(() => {\n    const socket = io(process.env.reactAppSignalingServer);\n    console.log(socket);\n    setSocket(socket);\n\n    getUserMedia().then(() => {\n      console.log(\"join\");\n      socket.emit(\"join\", { roomId: roomId });\n\n      console.log(\"emit join\");\n    });\n    socket.on(\"peer\", msg => {\n      const peerId = msg.peerId;\n      console.log(\"new peer poof!\", peerId);\n      if (peerId === socket.id) {\n        return console.log(\"Peer is me :D\", peerId);\n      }\n      createPeer(peerId, true, streamUrl);\n    });\n    socket.on(\"init\", () => {\n      console.log(\"init\");\n      setInitiator(true);\n    });\n    socket.on(\"ready\", () => {\n      console.log(\"c'est ok on rentre dans \" + roomId);\n      enter(roomId);\n    });\n    socket.on(\"desc\", data => {\n      console.log(\"desc\");\n      if (data.type === \"offer\" && initiator) return;\n      if (data.type === \"answer\" && !initiator) return;\n      call(data);\n    });\n    socket.on(\"disconnected\", () => {\n      console.log(\"il est parti\");\n      setInitiator(true);\n    });\n    socket.on(\"full\", () => {\n      console.log(\"c'est plein\");\n      setFull(true);\n    });\n\n    /*const participantConnected = participant => {\n      setParticipants(prevParticipants => [...prevParticipants, participant]);\n    };\n    const participantDisconnected = participant => {\n      setParticipants(prevParticipants =>\n        prevParticipants.filter(p => p !== participant)\n      );\n    };\n    Video.connect(token, {\n      name: roomName\n    }).then(room => {\n      setRoom(room);\n      room.on(\"participantConnected\", participantConnected);\n      room.on(\"participantDisconnected\", participantDisconnected);\n      room.participants.forEach(participantConnected);\n    });\n    return () => {\n      setRoom(currentRoom => {\n        if (currentRoom && currentRoom.localParticipant.state === \"connected\") {\n          currentRoom.localParticipant.tracks.forEach(function(\n            trackPublication\n          ) {\n            trackPublication.track.stop();\n          });\n          currentRoom.disconnect();\n          return null;\n        } else {\n          return currentRoom;\n        }\n      });\n    };*/\n  }, []);\n\n  const createPeer = (peerId, initiator, stream) => {\n    console.log(\"creating new peer\", peerId, initiator);\n\n    const peer = videoCall.init(stream, initiator);\n\n    peer.on(\"signal\", signal => {\n      const msgId = new Date().getTime();\n      const msg = { msgId, signal, to: peerId };\n      console.log(\"peer signal sent\", msg);\n      socket.emit(\"signal\", msg);\n    });\n\n    peer.on(\"stream\", stream => {\n      console.log(\"Got peer stream!!!\", peerId, stream);\n      peer.stream = stream;\n      //this.setPeerState(peerId, peer)\n    });\n\n    peer.on(\"connect\", () => {\n      console.log(\"Connected to peer\", peerId);\n      peer.connected = true;\n      //this.setPeerState(peerId, peer)\n      /*peer.send(this.serialize({\n        msg: 'hey man!'\n      }))*/\n    });\n\n    peer.on(\"data\", data => {\n      console.log(\"Data from peer\", peerId, this.unserialize(data));\n    });\n\n    peer.on(\"error\", e => {\n      console.log(\"Peer error %s:\", peerId, e);\n    });\n\n    //this.setPeerState(peerId, peer);\n\n    return peer;\n  };\n\n  const getUserMedia = cb => {\n    return new Promise((resolve, reject) => {\n      navigator.getUserMedia = navigator.getUserMedia =\n        navigator.getUserMedia ||\n        navigator.webkitGetUserMedia ||\n        navigator.mozGetUserMedia;\n      const op = {\n        audio: true,\n        video: true\n      };\n      navigator.getUserMedia(\n        op,\n        stream => {\n          console.log(op);\n          console.log(stream);\n          setStreamUrl(stream);\n          setLocalStream(stream);\n          setLocalVideo(stream);\n          videoRef.current.srcObject = stream;\n\n          //stream.srcObject.attach(videoRef);\n          resolve();\n        },\n        () => {}\n      );\n    });\n  };\n  const getDisplay = () => {\n    getDisplayStream().then(stream => {\n      stream.oninactive = () => {\n        this.state.peer.removeStream(this.state.localStream);\n        this.getUserMedia().then(() => {\n          this.state.peer.addStream(this.state.localStream);\n        });\n      };\n      setStreamUrl(stream);\n      setLocalStream(stream);\n      localVideo.srcObject = stream;\n      peer.addStream(stream);\n    });\n  };\n\n  const enter = roomId => {\n    console.log(roomId);\n    console.log(\"enter\");\n    setConnecting(true);\n    const peer = videoCall.init(localStream, initiator);\n    console.log(peer);\n    setPeer({ peer });\n\n    peer.on(\"signal\", data => {\n      console.log(\"signal\");\n      const signal = {\n        room: roomId,\n        desc: data\n      };\n      socket.emit(\"signal\", signal);\n    });\n    peer.on(\"stream\", stream => {\n      console.log(\"stream\");\n\n      remoteStreamUrl.push(stream);\n\n      //remoteVideo.srcObject = stream;\n      setConnecting(false);\n      setWaiting(false);\n    });\n    peer.on(\"error\", function(err) {\n      console.log(err);\n    });\n  };\n  const call = otherId => {\n    videoCall.connect(otherId);\n  };\n  const renderFull = () => {\n    if (this.state.full) {\n      return \"The room is full\";\n    }\n  };\n\n  const disableVideo = () => {\n    const videoTrack = localStream.getVideoTracks()[0];\n\n    if (localStream) {\n      videoTrack.enabled = false;\n      setVideoEnabled(false);\n    }\n  };\n\n  const enableVideo = () => {\n    const videoTrack = localStream.getVideoTracks()[0];\n\n    if (localStream) {\n      videoTrack.enabled = true;\n      setVideoEnabled(true);\n    }\n  };\n\n  return (\n    <div className=\"room\">\n      <h2>Salle: {roomId}</h2>\n      {connecting && (\n        <div>\n          <p>Establishing connection...</p>\n        </div>\n      )}\n      {waiting && (\n        <div>\n          <p>Waiting for someone...</p>\n        </div>\n      )}\n      <button onClick={handleLogout}>Déconnectation :-D</button>\n      {remoteParticipants}\n      <div className=\"local-participant\">\n        {localStream !== undefined ? (\n          <Participant\n            isLocal={true}\n            key={localStream.id}\n            name={username}\n            video={\n              <div>\n                <video ref={videoRef} autoPlay={true} muted={!audioEnabled} />\n              </div>\n            }\n            setAudioEnabled={setAudioEnabled}\n            audioEnabled={audioEnabled}\n            disableVideo={disableVideo}\n            enableVideo={enableVideo}\n            videoEnabled={videoEnabled}\n            videoEnabled={videoEnabled}\n          />\n        ) : (\n          \"\"\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Room;\n"]},"metadata":{},"sourceType":"module"}