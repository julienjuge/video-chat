{"ast":null,"code":"var __jsx = React.createElement;\nimport { AudioMutedOutlined, AudioOutlined, VideoCameraAddOutlined, VideoCameraOutlined } from \"@ant-design/icons\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Button } from \"antd\";\nimport { Rnd } from \"react-rnd\";\n\nconst Participant = ({\n  participant,\n  isLocal\n}) => {\n  const {\n    0: videoTracks,\n    1: setVideoTracks\n  } = useState([]);\n  const {\n    0: audioTracks,\n    1: setAudioTracks\n  } = useState([]);\n  const {\n    0: audioEnabled,\n    1: setAudioEnabled\n  } = useState(false);\n  const {\n    0: videoEnabled,\n    1: setVideoEnabled\n  } = useState(true);\n  const {\n    0: widthLocal,\n    1: setWidthLocal\n  } = useState(270);\n  const {\n    0: heightLocal,\n    1: setHeighLocal\n  } = useState(270);\n  const {\n    0: xLocal,\n    1: setXLocal\n  } = useState(1);\n  const {\n    0: yLocal,\n    1: setYLocal\n  } = useState(1);\n  const videoRef = useRef();\n  const audioRef = useRef();\n\n  const trackpubsToTracks = trackMap => Array.from(trackMap.values());\n\n  useEffect(() => {\n    const trackSubscribed = track => {\n      if (track.kind === \"video\") {\n        setVideoTracks(videoTracks => [...videoTracks, track]);\n      } else {\n        setAudioTracks(audioTracks => [...audioTracks, track]);\n      }\n    };\n\n    const trackUnsubscribed = track => {\n      if (track.kind === \"video\") {\n        setVideoTracks(videoTracks => videoTracks.filter(v => v !== track));\n      } else {\n        setAudioTracks(audioTracks => audioTracks.filter(a => a !== track));\n      }\n    };\n\n    console.log(participant);\n    console.log(participant);\n    setVideoTracks(trackpubsToTracks(participant.getVideoTracks()));\n    setAudioTracks(trackpubsToTracks(participant.getAudioTracks()));\n    console.log(videoTracks);\n    return () => {\n      setVideoTracks([]);\n      setAudioTracks([]);\n      participant.removeAllListeners();\n    };\n  }, [participant]);\n  useEffect(() => {\n    const videoTrack = videoTracks[0];\n    const audioTrack = audioTracks[0];\n\n    if (videoTrack && audioTrack) {\n      this.localVideo.srcObject = videoTrack; //videoTrack.attach(videoRef.current);\n      //audioTrack.attach(audioRef.current);\n\n      return () => {\n        videoTrack.detach();\n        audioTrack.detach();\n      };\n    }\n  }, [videoTracks]);\n\n  const getAudioButtons = () => {\n    console.log(\"audio buttons\");\n\n    if (isLocal === true) {\n      if (audioEnabled) {\n        return __jsx(Button, {\n          onClick: e => setAudioEnabled(false),\n          style: {\n            position: \"relative\"\n          },\n          type: \"primary\",\n          shape: \"circle\",\n          icon: __jsx(AudioMutedOutlined, null)\n        });\n      } else {\n        return __jsx(Button, {\n          onClick: e => setAudioEnabled(true),\n          style: {\n            position: \"relative\",\n            color: \"red\"\n          },\n          type: \"primary\",\n          shape: \"circle\",\n          icon: __jsx(AudioOutlined, null)\n        });\n      }\n    }\n\n    return __jsx(\"div\", null);\n  };\n\n  const getVideoButtons = () => {\n    if (isLocal === true) {\n      if (videoEnabled) {\n        return __jsx(Button, {\n          onClick: e => {\n            setVideoEnabled(false);\n            const videoTrack = videoTracks[0];\n\n            if (videoTrack) {\n              videoTrack.enable(false);\n              videoTrack.attach(videoRef.current);\n            }\n          },\n          style: {\n            position: \"relative\"\n          },\n          type: \"primary\",\n          shape: \"circle\",\n          icon: __jsx(VideoCameraOutlined, null)\n        });\n      } else {\n        return __jsx(Button, {\n          onClick: e => {\n            setVideoEnabled(true);\n            const videoTrack = videoTracks[0];\n\n            if (videoTrack) {\n              videoTrack.enable(true);\n              videoTrack.attach(videoRef.current);\n            }\n          },\n          style: {\n            position: \"relative\",\n            color: \"red\"\n          },\n          type: \"primary\",\n          shape: \"circle\",\n          icon: __jsx(VideoCameraOutlined, null)\n        });\n      }\n    }\n\n    return __jsx(\"div\", null);\n  };\n\n  if (isLocal) {\n    return __jsx(Rnd, {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        border: \"solid 1px #ddd\",\n        background: \"#f0f0f0\"\n      },\n      size: {\n        width: widthLocal,\n        height: heightLocal\n      },\n      position: {\n        x: xLocal,\n        y: yLocal\n      },\n      onDragStop: (e, d) => {\n        setXLocal(d.x);\n        setYLocal(d.y);\n      },\n      onResizeStop: (e, direction, ref, delta, position) => {\n        setWidthLocal(ref.offsetWidth);\n        setHeighLocal(ref.offsetHeight);\n        console.log(position);\n      }\n    }, __jsx(\"div\", {\n      className: \"participant\",\n      style: {\n        marginRight: 0,\n        width: \"99%\",\n        height: \"99%\"\n      }\n    }, __jsx(\"h3\", null, participant.identity, isLocal ? \" (moi)\" : \"\"), __jsx(\"video\", {\n      ref: videoRef,\n      autoPlay: true\n    }), __jsx(\"audio\", {\n      ref: audioRef,\n      autoPlay: true,\n      muted: !audioEnabled\n    }), getAudioButtons(), getVideoButtons()));\n  } else {\n    return __jsx(\"div\", {\n      className: \"participant\",\n      style: isLocal ? {\n        width: \"100%\"\n      } : {\n        width: \"30%\"\n      }\n    }, __jsx(\"h3\", null, participant.identity, isLocal ? \"(moi)\" : \"\"), __jsx(\"video\", {\n      ref: video => this.localVideo = video,\n      autoPlay: true\n    }), __jsx(\"audio\", {\n      ref: audioRef,\n      autoPlay: true,\n      muted: false\n    }), getAudioButtons(), getVideoButtons());\n  }\n};\n\nexport default Participant;","map":{"version":3,"sources":["/Users/julienjuge/DEVPERSO/video-chat/components/Participant.js"],"names":["AudioMutedOutlined","AudioOutlined","VideoCameraAddOutlined","VideoCameraOutlined","React","useEffect","useRef","useState","Button","Rnd","Participant","participant","isLocal","videoTracks","setVideoTracks","audioTracks","setAudioTracks","audioEnabled","setAudioEnabled","videoEnabled","setVideoEnabled","widthLocal","setWidthLocal","heightLocal","setHeighLocal","xLocal","setXLocal","yLocal","setYLocal","videoRef","audioRef","trackpubsToTracks","trackMap","Array","from","values","trackSubscribed","track","kind","trackUnsubscribed","filter","v","a","console","log","getVideoTracks","getAudioTracks","removeAllListeners","videoTrack","audioTrack","localVideo","srcObject","detach","getAudioButtons","e","position","color","getVideoButtons","enable","attach","current","display","alignItems","justifyContent","border","background","width","height","x","y","d","direction","ref","delta","offsetWidth","offsetHeight","marginRight","identity","video"],"mappings":"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","sourcesContent":["import {\n  AudioMutedOutlined,\n  AudioOutlined,\n  VideoCameraAddOutlined,\n  VideoCameraOutlined\n} from \"@ant-design/icons\";\nimport React, { useEffect, useRef, useState } from \"react\";\n\nimport { Button } from \"antd\";\nimport { Rnd } from \"react-rnd\";\n\nconst Participant = ({ participant, isLocal }) => {\n  const [videoTracks, setVideoTracks] = useState([]);\n  const [audioTracks, setAudioTracks] = useState([]);\n  const [audioEnabled, setAudioEnabled] = useState(false);\n  const [videoEnabled, setVideoEnabled] = useState(true);\n  const [widthLocal, setWidthLocal] = useState(270);\n  const [heightLocal, setHeighLocal] = useState(270);\n  const [xLocal, setXLocal] = useState(1);\n  const [yLocal, setYLocal] = useState(1);\n  const videoRef = useRef();\n  const audioRef = useRef();\n  const trackpubsToTracks = trackMap => Array.from(trackMap.values());\n  useEffect(() => {\n    const trackSubscribed = track => {\n      if (track.kind === \"video\") {\n        setVideoTracks(videoTracks => [...videoTracks, track]);\n      } else {\n        setAudioTracks(audioTracks => [...audioTracks, track]);\n      }\n    };\n\n    const trackUnsubscribed = track => {\n      if (track.kind === \"video\") {\n        setVideoTracks(videoTracks => videoTracks.filter(v => v !== track));\n      } else {\n        setAudioTracks(audioTracks => audioTracks.filter(a => a !== track));\n      }\n    };\n    console.log(participant);\n    console.log(participant);\n    setVideoTracks(trackpubsToTracks(participant.getVideoTracks()));\n    setAudioTracks(trackpubsToTracks(participant.getAudioTracks()));\n\n    console.log(videoTracks);\n\n    return () => {\n      setVideoTracks([]);\n      setAudioTracks([]);\n      participant.removeAllListeners();\n    };\n  }, [participant]);\n\n  useEffect(() => {\n    const videoTrack = videoTracks[0];\n    const audioTrack = audioTracks[0];\n    if (videoTrack && audioTrack) {\n      this.localVideo.srcObject = videoTrack;\n      //videoTrack.attach(videoRef.current);\n      //audioTrack.attach(audioRef.current);\n      return () => {\n        videoTrack.detach();\n        audioTrack.detach();\n      };\n    }\n  }, [videoTracks]);\n\n  const getAudioButtons = () => {\n    console.log(\"audio buttons\");\n    if (isLocal === true) {\n      if (audioEnabled) {\n        return (\n          <Button\n            onClick={e => setAudioEnabled(false)}\n            style={{ position: \"relative\" }}\n            type=\"primary\"\n            shape=\"circle\"\n            icon={<AudioMutedOutlined />}\n          />\n        );\n      } else {\n        return (\n          <Button\n            onClick={e => setAudioEnabled(true)}\n            style={{ position: \"relative\", color: \"red\" }}\n            type=\"primary\"\n            shape=\"circle\"\n            icon={<AudioOutlined />}\n          />\n        );\n      }\n    }\n    return <div></div>;\n  };\n\n  const getVideoButtons = () => {\n    if (isLocal === true) {\n      if (videoEnabled) {\n        return (\n          <Button\n            onClick={e => {\n              setVideoEnabled(false);\n              const videoTrack = videoTracks[0];\n              if (videoTrack) {\n                videoTrack.enable(false);\n                videoTrack.attach(videoRef.current);\n              }\n            }}\n            style={{ position: \"relative\" }}\n            type=\"primary\"\n            shape=\"circle\"\n            icon={<VideoCameraOutlined />}\n          />\n        );\n      } else {\n        return (\n          <Button\n            onClick={e => {\n              setVideoEnabled(true);\n              const videoTrack = videoTracks[0];\n              if (videoTrack) {\n                videoTrack.enable(true);\n                videoTrack.attach(videoRef.current);\n              }\n            }}\n            style={{ position: \"relative\", color: \"red\" }}\n            type=\"primary\"\n            shape=\"circle\"\n            icon={<VideoCameraOutlined />}\n          />\n        );\n      }\n    }\n    return <div></div>;\n  };\n  if (isLocal) {\n    return (\n      <Rnd\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          border: \"solid 1px #ddd\",\n          background: \"#f0f0f0\"\n        }}\n        size={{ width: widthLocal, height: heightLocal }}\n        position={{ x: xLocal, y: yLocal }}\n        onDragStop={(e, d) => {\n          setXLocal(d.x);\n          setYLocal(d.y);\n        }}\n        onResizeStop={(e, direction, ref, delta, position) => {\n          setWidthLocal(ref.offsetWidth);\n          setHeighLocal(ref.offsetHeight);\n          console.log(position);\n        }}\n      >\n        <div\n          className=\"participant\"\n          style={{ marginRight: 0, width: \"99%\", height: \"99%\" }}\n        >\n          <h3>\n            {participant.identity}\n            {isLocal ? \" (moi)\" : \"\"}\n          </h3>\n          <video ref={videoRef} autoPlay={true} />\n          <audio ref={audioRef} autoPlay={true} muted={!audioEnabled} />\n\n          {getAudioButtons()}\n          {getVideoButtons()}\n        </div>\n      </Rnd>\n    );\n  } else {\n    return (\n      <div\n        className=\"participant\"\n        style={isLocal ? { width: \"100%\" } : { width: \"30%\" }}\n      >\n        <h3>\n          {participant.identity}\n          {isLocal ? \"(moi)\" : \"\"}\n        </h3>\n        <video ref={video => (this.localVideo = video)} autoPlay={true} />\n        <audio ref={audioRef} autoPlay={true} muted={false} />\n\n        {getAudioButtons()}\n        {getVideoButtons()}\n      </div>\n    );\n  }\n};\n\nexport default Participant;\n"]},"metadata":{},"sourceType":"module"}