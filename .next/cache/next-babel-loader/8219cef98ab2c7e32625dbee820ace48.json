{"ast":null,"code":"var _this = this;\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Participant from \"./Participant\";\nimport Video from \"twilio-video\";\nimport VideoCall from \"../helpers/simple-peer\";\nimport { getDisplayStream } from \"../helpers/media-access\";\n\nvar io = require(\"socket.io-client\");\n\nvar socket = io(\"http://localhost:3000\");\n\nvar Room = function Room(_ref) {\n  var roomId = _ref.roomId,\n      token = _ref.token,\n      handleLogout = _ref.handleLogout;\n\n  var _useState = useState(null),\n      room = _useState[0],\n      setRoom = _useState[1];\n\n  var _useState2 = useState([]),\n      participants = _useState2[0],\n      setParticipants = _useState2[1];\n\n  var _useState3 = useState(),\n      localStream = _useState3[0],\n      setLocalStream = _useState3[1];\n\n  var _useState4 = useState(),\n      remoteStreamUrl = _useState4[0],\n      setRemoteStreamUrl = _useState4[1];\n\n  var _useState5 = useState(),\n      streamUrl = _useState5[0],\n      setStreamUrl = _useState5[1];\n\n  var _useState6 = useState(),\n      initiator = _useState6[0],\n      setInitiator = _useState6[1];\n\n  var _useState7 = useState(),\n      peer = _useState7[0],\n      setPeer = _useState7[1];\n\n  var _useState8 = useState(),\n      full = _useState8[0],\n      setFull = _useState8[1];\n\n  var _useState9 = useState(),\n      connecting = _useState9[0],\n      setConnecting = _useState9[1];\n\n  var _useState10 = useState(),\n      waiting = _useState10[0],\n      setWaiting = _useState10[1];\n\n  var _useState11 = useState(),\n      socket = _useState11[0],\n      setSocket = _useState11[1];\n\n  var _useState12 = useState(),\n      localVideo = _useState12[0],\n      setLocalVideo = _useState12[1];\n\n  var videoCall = new VideoCall();\n  var remoteParticipants = participants.map(function (participant) {\n    return __jsx(Participant, {\n      isLocal: false,\n      key: participant.sid,\n      participant: participant\n    });\n  });\n  useEffect(function () {\n    var socket = io(process.env.reactAppSignalingServer);\n    console.log(socket);\n    setSocket(socket);\n    getUserMedia().then(function () {\n      console.log(\"join\");\n      socket.emit(\"join\", {\n        roomId: roomId\n      });\n      console.log(\"emit join\");\n    });\n    socket.on(\"init\", function () {\n      console.log(\"init\");\n      setInitiator(true);\n    });\n    socket.on(\"ready\", function () {\n      console.log(\"c'est ok on rentre dans \" + roomId);\n      enter(roomId);\n    });\n    socket.on(\"desc\", function (data) {\n      console.log(\"desc\");\n      if (data.type === \"offer\" && initiator) return;\n      if (data.type === \"answer\" && !initiator) return;\n      call(data);\n    });\n    socket.on(\"disconnected\", function () {\n      console.log(\"il est parti\");\n      setInitiator(true);\n    });\n    socket.on(\"full\", function () {\n      console.log(\"c'est plein\");\n      setFull(true);\n    });\n    /*const participantConnected = participant => {\n      setParticipants(prevParticipants => [...prevParticipants, participant]);\n    };\n    const participantDisconnected = participant => {\n      setParticipants(prevParticipants =>\n        prevParticipants.filter(p => p !== participant)\n      );\n    };\n    Video.connect(token, {\n      name: roomName\n    }).then(room => {\n      setRoom(room);\n      room.on(\"participantConnected\", participantConnected);\n      room.on(\"participantDisconnected\", participantDisconnected);\n      room.participants.forEach(participantConnected);\n    });\n    return () => {\n      setRoom(currentRoom => {\n        if (currentRoom && currentRoom.localParticipant.state === \"connected\") {\n          currentRoom.localParticipant.tracks.forEach(function(\n            trackPublication\n          ) {\n            trackPublication.track.stop();\n          });\n          currentRoom.disconnect();\n          return null;\n        } else {\n          return currentRoom;\n        }\n      });\n    };*/\n  }, []);\n\n  var getUserMedia = function getUserMedia(cb) {\n    return new Promise(function (resolve, reject) {\n      navigator.getUserMedia = navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\n      var op = {\n        audio: true,\n        video: true\n      };\n      navigator.getUserMedia(op, function (stream) {\n        setLocalStream(stream);\n        resolve();\n      }, function () {});\n    });\n  };\n\n  var getDisplay = function getDisplay() {\n    getDisplayStream().then(function (stream) {\n      stream.oninactive = function () {\n        _this.state.peer.removeStream(_this.state.localStream);\n\n        _this.getUserMedia().then(function () {\n          _this.state.peer.addStream(_this.state.localStream);\n        });\n      };\n\n      setStreamUrl(stream);\n      setLocalStream(stream);\n      localVideo.srcObject = stream;\n      peer.addStream(stream);\n    });\n  };\n\n  var enter = function enter(roomId) {\n    console.log(roomId);\n    console.log(\"enter\");\n    setConnecting(true);\n    var peer = videoCall.init(localStream, initiator);\n    console.log(peer);\n    setPeer(peer);\n    peer.on(\"signal\", function (data) {\n      console.log(\"signal\");\n      var signal = {\n        room: roomId,\n        desc: data\n      };\n      socket.emit(\"signal\", signal);\n    });\n    peer.on(\"stream\", function (stream) {\n      console.log(\"stream\");\n      console.log(stream); //remoteVideo.srcObject = stream;\n\n      setConnecting(false);\n      setWaiting(false);\n    });\n    peer.on(\"error\", function (err) {\n      console.log(err);\n    });\n  };\n\n  var call = function call(otherId) {\n    videoCall.connect(otherId);\n  };\n\n  var renderFull = function renderFull() {\n    if (_this.state.full) {\n      return \"The room is full\";\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"room\"\n  }, __jsx(\"h2\", null, \"Salle: \", roomId), __jsx(\"button\", {\n    onClick: handleLogout\n  }, \"D\\xE9connectation :-D\"), remoteParticipants, __jsx(\"div\", {\n    className: \"local-participant\"\n  }, localStream !== undefined ? __jsx(Participant, {\n    isLocal: true,\n    key: localStream.id,\n    stream: localStream\n  }) : \"\"));\n};\n\nexport default Room;","map":{"version":3,"sources":["/Users/julienjuge/DEVPERSO/video-chat/components/Room.js"],"names":["React","useEffect","useRef","useState","Participant","Video","VideoCall","getDisplayStream","io","require","socket","Room","roomId","token","handleLogout","room","setRoom","participants","setParticipants","localStream","setLocalStream","remoteStreamUrl","setRemoteStreamUrl","streamUrl","setStreamUrl","initiator","setInitiator","peer","setPeer","full","setFull","connecting","setConnecting","waiting","setWaiting","setSocket","localVideo","setLocalVideo","videoCall","remoteParticipants","map","participant","sid","process","env","reactAppSignalingServer","console","log","getUserMedia","then","emit","on","enter","data","type","call","cb","Promise","resolve","reject","navigator","webkitGetUserMedia","mozGetUserMedia","op","audio","video","stream","getDisplay","oninactive","state","removeStream","addStream","srcObject","init","signal","desc","err","otherId","connect","renderFull","undefined","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\n\nimport Participant from \"./Participant\";\nimport Video from \"twilio-video\";\nimport VideoCall from \"../helpers/simple-peer\";\nimport { getDisplayStream } from \"../helpers/media-access\";\n\nconst io = require(\"socket.io-client\");\nconst socket = io(\"http://localhost:3000\");\n\nconst Room = ({ roomId, token, handleLogout }) => {\n  const [room, setRoom] = useState(null);\n  const [participants, setParticipants] = useState([]);\n  const [localStream, setLocalStream] = useState();\n  const [remoteStreamUrl, setRemoteStreamUrl] = useState();\n  const [streamUrl, setStreamUrl] = useState();\n  const [initiator, setInitiator] = useState();\n  const [peer, setPeer] = useState();\n  const [full, setFull] = useState();\n  const [connecting, setConnecting] = useState();\n  const [waiting, setWaiting] = useState();\n  const [socket, setSocket] = useState();\n  const [localVideo, setLocalVideo] = useState();\n\n  const videoCall = new VideoCall();\n\n  const remoteParticipants = participants.map(participant => (\n    <Participant\n      isLocal={false}\n      key={participant.sid}\n      participant={participant}\n    />\n  ));\n\n  useEffect(() => {\n    const socket = io(process.env.reactAppSignalingServer);\n    console.log(socket);\n    setSocket(socket);\n\n    getUserMedia().then(() => {\n      console.log(\"join\");\n      socket.emit(\"join\", { roomId: roomId });\n\n      console.log(\"emit join\");\n    });\n    socket.on(\"init\", () => {\n      console.log(\"init\");\n      setInitiator(true);\n    });\n    socket.on(\"ready\", () => {\n      console.log(\"c'est ok on rentre dans \" + roomId);\n      enter(roomId);\n    });\n    socket.on(\"desc\", data => {\n      console.log(\"desc\");\n      if (data.type === \"offer\" && initiator) return;\n      if (data.type === \"answer\" && !initiator) return;\n      call(data);\n    });\n    socket.on(\"disconnected\", () => {\n      console.log(\"il est parti\");\n      setInitiator(true);\n    });\n    socket.on(\"full\", () => {\n      console.log(\"c'est plein\");\n      setFull(true);\n    });\n\n    /*const participantConnected = participant => {\n      setParticipants(prevParticipants => [...prevParticipants, participant]);\n    };\n    const participantDisconnected = participant => {\n      setParticipants(prevParticipants =>\n        prevParticipants.filter(p => p !== participant)\n      );\n    };\n    Video.connect(token, {\n      name: roomName\n    }).then(room => {\n      setRoom(room);\n      room.on(\"participantConnected\", participantConnected);\n      room.on(\"participantDisconnected\", participantDisconnected);\n      room.participants.forEach(participantConnected);\n    });\n    return () => {\n      setRoom(currentRoom => {\n        if (currentRoom && currentRoom.localParticipant.state === \"connected\") {\n          currentRoom.localParticipant.tracks.forEach(function(\n            trackPublication\n          ) {\n            trackPublication.track.stop();\n          });\n          currentRoom.disconnect();\n          return null;\n        } else {\n          return currentRoom;\n        }\n      });\n    };*/\n  }, []);\n\n  const getUserMedia = cb => {\n    return new Promise((resolve, reject) => {\n      navigator.getUserMedia = navigator.getUserMedia =\n        navigator.getUserMedia ||\n        navigator.webkitGetUserMedia ||\n        navigator.mozGetUserMedia;\n      const op = {\n        audio: true,\n        video: true\n      };\n      navigator.getUserMedia(\n        op,\n        stream => {\n          setLocalStream(stream);\n          resolve();\n        },\n        () => {}\n      );\n    });\n  };\n  const getDisplay = () => {\n    getDisplayStream().then(stream => {\n      stream.oninactive = () => {\n        this.state.peer.removeStream(this.state.localStream);\n        this.getUserMedia().then(() => {\n          this.state.peer.addStream(this.state.localStream);\n        });\n      };\n      setStreamUrl(stream);\n      setLocalStream(stream);\n      localVideo.srcObject = stream;\n      peer.addStream(stream);\n    });\n  };\n\n  const enter = roomId => {\n    console.log(roomId);\n    console.log(\"enter\");\n    setConnecting(true);\n    const peer = videoCall.init(localStream, initiator);\n    console.log(peer);\n    setPeer(peer);\n\n    peer.on(\"signal\", data => {\n      console.log(\"signal\");\n      const signal = {\n        room: roomId,\n        desc: data\n      };\n      socket.emit(\"signal\", signal);\n    });\n    peer.on(\"stream\", stream => {\n      console.log(\"stream\");\n      console.log(stream);\n      //remoteVideo.srcObject = stream;\n      setConnecting(false);\n      setWaiting(false);\n    });\n    peer.on(\"error\", function(err) {\n      console.log(err);\n    });\n  };\n  const call = otherId => {\n    videoCall.connect(otherId);\n  };\n  const renderFull = () => {\n    if (this.state.full) {\n      return \"The room is full\";\n    }\n  };\n\n  return (\n    <div className=\"room\">\n      <h2>Salle: {roomId}</h2>\n      <button onClick={handleLogout}>Déconnectation :-D</button>\n      {remoteParticipants}\n      <div className=\"local-participant\">\n        {localStream !== undefined ? (\n          <Participant\n            isLocal={true}\n            key={localStream.id}\n            stream={localStream}\n          />\n        ) : (\n          \"\"\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Room;\n"]},"metadata":{},"sourceType":"module"}