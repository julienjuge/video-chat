{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Peer from 'simple-peer';\nexport default class VideoCall {\n  constructor() {\n    _defineProperty(this, \"peer\", null);\n\n    _defineProperty(this, \"init\", (stream, initiator) => {\n      this.peer = new Peer({\n        initiator: initiator,\n        stream: stream,\n        trickle: false,\n        reconnectTimer: 1000,\n        iceTransportPolicy: 'relay',\n        config: {\n          iceServers: [{\n            urls: process.env.REACT_APP_STUN_SERVERS.split(',')\n          }, {\n            urls: process.env.REACT_APP_TURN_SERVERS.split(','),\n            username: process.env.REACT_APP_TURN_USERNAME,\n            credential: process.env.REACT_APP_TURN_CREDENCIAL\n          }]\n        }\n      });\n      return this.peer;\n    });\n\n    _defineProperty(this, \"connect\", otherId => {\n      this.peer.signal(otherId);\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/julienjuge/DEVPERSO/video-chat/helpers/simple-peer.js"],"names":["Peer","VideoCall","stream","initiator","peer","trickle","reconnectTimer","iceTransportPolicy","config","iceServers","urls","process","env","REACT_APP_STUN_SERVERS","split","REACT_APP_TURN_SERVERS","username","REACT_APP_TURN_USERNAME","credential","REACT_APP_TURN_CREDENCIAL","otherId","signal"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,aAAjB;AAEA,eAAe,MAAMC,SAAN,CAAgB;AAAA;AAAA,kCACpB,IADoB;;AAAA,kCAEpB,CAACC,MAAD,EAASC,SAAT,KAAuB;AAC1B,WAAKC,IAAL,GAAY,IAAIJ,IAAJ,CAAS;AACjBG,QAAAA,SAAS,EAAEA,SADM;AAEjBD,QAAAA,MAAM,EAAEA,MAFS;AAGjBG,QAAAA,OAAO,EAAE,KAHQ;AAIjBC,QAAAA,cAAc,EAAE,IAJC;AAKjBC,QAAAA,kBAAkB,EAAE,OALH;AAMjBC,QAAAA,MAAM,EAAE;AACJC,UAAAA,UAAU,EAAE,CACR;AAAEC,YAAAA,IAAI,EAAEC,OAAO,CAACC,GAAR,CAAYC,sBAAZ,CAAmCC,KAAnC,CAAyC,GAAzC;AAAR,WADQ,EAER;AACIJ,YAAAA,IAAI,EAAEC,OAAO,CAACC,GAAR,CAAYG,sBAAZ,CAAmCD,KAAnC,CAAyC,GAAzC,CADV;AAEIE,YAAAA,QAAQ,EAAEL,OAAO,CAACC,GAAR,CAAYK,uBAF1B;AAGIC,YAAAA,UAAU,EAAEP,OAAO,CAACC,GAAR,CAAYO;AAH5B,WAFQ;AADR;AANS,OAAT,CAAZ;AAiBA,aAAO,KAAKf,IAAZ;AACH,KArB0B;;AAAA,qCAsBhBgB,OAAD,IAAa;AACnB,WAAKhB,IAAL,CAAUiB,MAAV,CAAiBD,OAAjB;AACH,KAxB0B;AAAA;;AAAA","sourcesContent":["import Peer from 'simple-peer'\n\nexport default class VideoCall {\n    peer = null \n    init = (stream, initiator) => {\n        this.peer = new Peer({\n            initiator: initiator,\n            stream: stream,\n            trickle: false,\n            reconnectTimer: 1000,\n            iceTransportPolicy: 'relay',\n            config: {\n                iceServers: [\n                    { urls: process.env.REACT_APP_STUN_SERVERS.split(',') },\n                    {\n                        urls: process.env.REACT_APP_TURN_SERVERS.split(','),\n                        username: process.env.REACT_APP_TURN_USERNAME,\n                        credential: process.env.REACT_APP_TURN_CREDENCIAL\n                    },\n                ]\n            }\n        })\n        return this.peer\n    }\n    connect = (otherId) => {\n        this.peer.signal(otherId)\n    }  \n} "]},"metadata":{},"sourceType":"module"}