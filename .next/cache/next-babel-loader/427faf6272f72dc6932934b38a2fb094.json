{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this;\n\nvar __jsx = React.createElement;\nimport React, { createRef, useEffect, useMemo, useRef, useState } from \"react\";\nimport Participant from \"./Participant\";\nimport SimplePeer from \"simple-peer\";\nimport Video from \"twilio-video\";\nimport VideoCall from \"../helpers/simple-peer\";\nimport create from \"@ant-design/icons/lib/components/IconFont\";\nimport { getDisplayStream } from \"../helpers/media-access\";\n\nvar io = require(\"socket.io-client\");\n\nvar socket = io(process.env.reactAppSignalingServer);\n\nvar Room = function Room(_ref) {\n  var username = _ref.username,\n      roomId = _ref.roomId,\n      token = _ref.token,\n      handleLogout = _ref.handleLogout;\n\n  var _useState = useState(null),\n      room = _useState[0],\n      setRoom = _useState[1];\n\n  var _useState2 = useState([]),\n      participants = _useState2[0],\n      setParticipants = _useState2[1];\n\n  var _useState3 = useState(),\n      localStream = _useState3[0],\n      setLocalStream = _useState3[1];\n\n  var _useState4 = useState([]),\n      remoteStreamUrl = _useState4[0],\n      setRemoteStreamUrl = _useState4[1];\n\n  var _useState5 = useState(),\n      streamUrl = _useState5[0],\n      setStreamUrl = _useState5[1];\n\n  var _useState6 = useState(false),\n      initiator = _useState6[0],\n      setInitiator = _useState6[1];\n\n  var _useState7 = useState(),\n      peer = _useState7[0],\n      setPeer = _useState7[1];\n\n  var _useState8 = useState(),\n      full = _useState8[0],\n      setFull = _useState8[1];\n\n  var _useState9 = useState(),\n      connecting = _useState9[0],\n      setConnecting = _useState9[1];\n\n  var _useState10 = useState(),\n      waiting = _useState10[0],\n      setWaiting = _useState10[1];\n\n  var _useState11 = useState(),\n      localVideo = _useState11[0],\n      setLocalVideo = _useState11[1];\n\n  var _useState12 = useState(false),\n      audioEnabled = _useState12[0],\n      setAudioEnabled = _useState12[1];\n\n  var _useState13 = useState(true),\n      videoEnabled = _useState13[0],\n      setVideoEnabled = _useState13[1];\n\n  var _useState14 = useState([]),\n      remoteStreams = _useState14[0],\n      setRemoteStreams = _useState14[1];\n\n  var refs = useRef(Array.from({\n    length: 50\n  }, function () {\n    return React.createRef();\n  }));\n  var videoCall = new VideoCall();\n  var videoRef = useRef();\n  var audioRef = useRef();\n  var remoteParticipants = remoteStreams.map(function (stream, index) {\n    console.log(refs);\n    console.log(index);\n    console.log(refs.current[0]);\n    return __jsx(Participant, {\n      isLocal: false,\n      key: stream,\n      video: __jsx(\"div\", null, __jsx(\"video\", {\n        srcObject: stream,\n        autoPlay: true\n      }))\n    });\n  });\n  useEffect(function () {\n    console.log(refs);\n    console.log(refs.current[0]);\n  }, [refs]);\n  useEffect(function () {\n    console.log(socket);\n    getUserMedia().then(function () {\n      console.log(\"join\");\n      socket.emit(\"join\", {\n        roomId: roomId\n      });\n      console.log(\"emit join\");\n    });\n    socket.on(\"init\", function () {\n      console.log(\"init\");\n      setInitiator(true);\n      console.log(initiator);\n    });\n    socket.on(\"ready\", function () {\n      console.log(\"c'est ok on rentre dans \" + roomId);\n      console.log(initiator);\n      enter(roomId);\n    });\n    socket.on(\"desc\", function (data) {\n      console.log(\"desc\");\n      if (data.type === \"offer\" && initiator) return;\n      if (data.type === \"answer\" && !initiator) return;\n      call(data);\n    });\n    socket.on(\"disconnected\", function () {\n      console.log(\"il est parti\");\n      setInitiator(true);\n    });\n    socket.on(\"full\", function () {\n      console.log(\"c'est plein\");\n      setFull(true);\n    });\n    /*const participantConnected = participant => {\n      setParticipants(prevParticipants => [...prevParticipants, participant]);\n    };\n    const participantDisconnected = participant => {\n      setParticipants(prevParticipants =>\n        prevParticipants.filter(p => p !== participant)\n      );\n    };\n    Video.connect(token, {\n      name: roomName\n    }).then(room => {\n      setRoom(room);\n      room.on(\"participantConnected\", participantConnected);\n      room.on(\"participantDisconnected\", participantDisconnected);\n      room.participants.forEach(participantConnected);\n    });\n    return () => {\n      setRoom(currentRoom => {\n        if (currentRoom && currentRoom.localParticipant.state === \"connected\") {\n          currentRoom.localParticipant.tracks.forEach(function(\n            trackPublication\n          ) {\n            trackPublication.track.stop();\n          });\n          currentRoom.disconnect();\n          return null;\n        } else {\n          return currentRoom;\n        }\n      });\n    };*/\n  }, [initiator]);\n\n  var getUserMedia = function getUserMedia(cb) {\n    return new Promise(function (resolve, reject) {\n      navigator.getUserMedia = navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\n      var op = {\n        audio: true,\n        video: true\n      };\n      navigator.getUserMedia(op, function (stream) {\n        console.log(op);\n        console.log(stream);\n        setStreamUrl(stream);\n        setLocalStream(stream);\n        setLocalVideo(stream);\n        videoRef.current.srcObject = stream; //stream.srcObject.attach(videoRef);\n\n        resolve();\n      }, function () {});\n    });\n  };\n\n  var getDisplay = function getDisplay() {\n    getDisplayStream().then(function (stream) {\n      stream.oninactive = function () {\n        _this.state.peer.removeStream(_this.state.localStream);\n\n        _this.getUserMedia().then(function () {\n          _this.state.peer.addStream(_this.state.localStream);\n        });\n      };\n\n      setStreamUrl(stream);\n      setLocalStream(stream);\n      localVideo.srcObject = stream;\n      peer.addStream(stream);\n    });\n  };\n\n  var enter = function enter(roomId) {\n    console.log(\"enter in \" + roomId);\n    setConnecting(true);\n    var peer = videoCall.init(localStream, initiator);\n    setPeer({\n      peer: peer\n    });\n    peer.on(\"signal\", function (data) {\n      console.log(\"signal peer\");\n      var signal = {\n        room: roomId,\n        desc: data\n      };\n      socket.emit(\"signal\", signal);\n    });\n    peer.on(\"stream\", function (stream) {\n      console.log(\"stream peer\");\n      remoteStreams.push(stream); //refs.current[refs.length].srcObject =  stream;\n      //this.remoteVideo.srcObject = stream;\n\n      setConnecting(false);\n      setWaiting(false);\n    });\n    peer.on(\"error\", function (err) {\n      console.log(err);\n    });\n  };\n\n  var call = function call(otherId) {\n    videoCall.connect(otherId);\n  };\n\n  var renderFull = function renderFull() {\n    if (_this.state.full) {\n      return \"The room is full\";\n    }\n  };\n\n  var disableVideo = function disableVideo() {\n    var videoTrack = localStream.getVideoTracks()[0];\n\n    if (localStream) {\n      videoTrack.enabled = false;\n      setVideoEnabled(false);\n    }\n  };\n\n  var enableVideo = function enableVideo() {\n    var videoTrack = localStream.getVideoTracks()[0];\n\n    if (localStream) {\n      videoTrack.enabled = true;\n      setVideoEnabled(true);\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"room\"\n  }, __jsx(\"h2\", null, \"Salle: \", roomId), connecting && __jsx(\"div\", null, __jsx(\"p\", null, \"Establishing connection...\")), waiting && __jsx(\"div\", null, __jsx(\"p\", null, \"Waiting for someone...\")), __jsx(\"button\", {\n    onClick: handleLogout\n  }, \"D\\xE9connectation :-D\"), remoteStreams.length > 0 && remoteParticipants, __jsx(\"div\", {\n    className: \"local-participant\"\n  }, localStream !== undefined ? __jsx(Participant, _defineProperty({\n    isLocal: true,\n    key: localStream.id,\n    name: username,\n    video: __jsx(\"div\", null, __jsx(\"video\", {\n      ref: videoRef,\n      autoPlay: true,\n      muted: !audioEnabled\n    })),\n    setAudioEnabled: setAudioEnabled,\n    audioEnabled: audioEnabled,\n    disableVideo: disableVideo,\n    enableVideo: enableVideo,\n    videoEnabled: videoEnabled\n  }, \"videoEnabled\", videoEnabled)) : \"\"));\n};\n\nexport default Room;","map":{"version":3,"sources":["/Users/julienjuge/DEVPERSO/video-chat/components/Room.js"],"names":["React","createRef","useEffect","useMemo","useRef","useState","Participant","SimplePeer","Video","VideoCall","create","getDisplayStream","io","require","socket","process","env","reactAppSignalingServer","Room","username","roomId","token","handleLogout","room","setRoom","participants","setParticipants","localStream","setLocalStream","remoteStreamUrl","setRemoteStreamUrl","streamUrl","setStreamUrl","initiator","setInitiator","peer","setPeer","full","setFull","connecting","setConnecting","waiting","setWaiting","localVideo","setLocalVideo","audioEnabled","setAudioEnabled","videoEnabled","setVideoEnabled","remoteStreams","setRemoteStreams","refs","Array","from","length","videoCall","videoRef","audioRef","remoteParticipants","map","stream","index","console","log","current","getUserMedia","then","emit","on","enter","data","type","call","cb","Promise","resolve","reject","navigator","webkitGetUserMedia","mozGetUserMedia","op","audio","video","srcObject","getDisplay","oninactive","state","removeStream","addStream","init","signal","desc","push","err","otherId","connect","renderFull","disableVideo","videoTrack","getVideoTracks","enabled","enableVideo","undefined","id"],"mappings":"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","sourcesContent":["import React, { createRef, useEffect, useMemo, useRef, useState } from \"react\";\n\nimport Participant from \"./Participant\";\nimport SimplePeer from \"simple-peer\";\nimport Video from \"twilio-video\";\nimport VideoCall from \"../helpers/simple-peer\";\nimport create from \"@ant-design/icons/lib/components/IconFont\";\nimport { getDisplayStream } from \"../helpers/media-access\";\n\nconst io = require(\"socket.io-client\");\nconst socket = io(process.env.reactAppSignalingServer);\n\nconst Room = ({ username, roomId, token, handleLogout }) => {\n  const [room, setRoom] = useState(null);\n  const [participants, setParticipants] = useState([]);\n  const [localStream, setLocalStream] = useState();\n  const [remoteStreamUrl, setRemoteStreamUrl] = useState([]);\n  const [streamUrl, setStreamUrl] = useState();\n  const [initiator, setInitiator] = useState(false);\n  const [peer, setPeer] = useState();\n  const [full, setFull] = useState();\n  const [connecting, setConnecting] = useState();\n  const [waiting, setWaiting] = useState();\n  const [localVideo, setLocalVideo] = useState();\n  const [audioEnabled, setAudioEnabled] = useState(false);\n  const [videoEnabled, setVideoEnabled] = useState(true);\n  const [remoteStreams, setRemoteStreams] = useState([]);\n  const refs = useRef(Array.from({ length: 50 }, () => React.createRef()));\n\n  const videoCall = new VideoCall();\n  const videoRef = useRef();\n  const audioRef = useRef();\n\n  const remoteParticipants = remoteStreams.map((stream, index) => {\n    console.log(refs);\n    console.log(index);\n    console.log(refs.current[0]);\n    return (\n      <Participant\n        isLocal={false}\n        key={stream}\n        video={\n          <div>\n            <video srcObject={stream} autoPlay={true} />\n          </div>\n        }\n      />\n    );\n  });\n\n  useEffect(() => {\n    console.log(refs);\n    console.log(refs.current[0]);\n  }, [refs]);\n\n  useEffect(() => {\n    console.log(socket);\n    getUserMedia().then(() => {\n      console.log(\"join\");\n      socket.emit(\"join\", { roomId: roomId });\n\n      console.log(\"emit join\");\n    });\n\n    socket.on(\"init\", () => {\n      console.log(\"init\");\n      setInitiator(true);\n      console.log(initiator);\n    });\n    socket.on(\"ready\", () => {\n      console.log(\"c'est ok on rentre dans \" + roomId);\n      console.log(initiator);\n      enter(roomId);\n    });\n    socket.on(\"desc\", data => {\n      console.log(\"desc\");\n      if (data.type === \"offer\" && initiator) return;\n      if (data.type === \"answer\" && !initiator) return;\n      call(data);\n    });\n    socket.on(\"disconnected\", () => {\n      console.log(\"il est parti\");\n      setInitiator(true);\n    });\n    socket.on(\"full\", () => {\n      console.log(\"c'est plein\");\n      setFull(true);\n    });\n\n    /*const participantConnected = participant => {\n      setParticipants(prevParticipants => [...prevParticipants, participant]);\n    };\n    const participantDisconnected = participant => {\n      setParticipants(prevParticipants =>\n        prevParticipants.filter(p => p !== participant)\n      );\n    };\n    Video.connect(token, {\n      name: roomName\n    }).then(room => {\n      setRoom(room);\n      room.on(\"participantConnected\", participantConnected);\n      room.on(\"participantDisconnected\", participantDisconnected);\n      room.participants.forEach(participantConnected);\n    });\n    return () => {\n      setRoom(currentRoom => {\n        if (currentRoom && currentRoom.localParticipant.state === \"connected\") {\n          currentRoom.localParticipant.tracks.forEach(function(\n            trackPublication\n          ) {\n            trackPublication.track.stop();\n          });\n          currentRoom.disconnect();\n          return null;\n        } else {\n          return currentRoom;\n        }\n      });\n    };*/\n  }, [initiator]);\n\n  const getUserMedia = cb => {\n    return new Promise((resolve, reject) => {\n      navigator.getUserMedia = navigator.getUserMedia =\n        navigator.getUserMedia ||\n        navigator.webkitGetUserMedia ||\n        navigator.mozGetUserMedia;\n      const op = {\n        audio: true,\n        video: true\n      };\n      navigator.getUserMedia(\n        op,\n        stream => {\n          console.log(op);\n          console.log(stream);\n          setStreamUrl(stream);\n          setLocalStream(stream);\n          setLocalVideo(stream);\n          videoRef.current.srcObject = stream;\n\n          //stream.srcObject.attach(videoRef);\n          resolve();\n        },\n        () => {}\n      );\n    });\n  };\n  const getDisplay = () => {\n    getDisplayStream().then(stream => {\n      stream.oninactive = () => {\n        this.state.peer.removeStream(this.state.localStream);\n        this.getUserMedia().then(() => {\n          this.state.peer.addStream(this.state.localStream);\n        });\n      };\n      setStreamUrl(stream);\n      setLocalStream(stream);\n      localVideo.srcObject = stream;\n      peer.addStream(stream);\n    });\n  };\n\n  const enter = roomId => {\n    console.log(\"enter in \" + roomId);\n    setConnecting(true);\n    const peer = videoCall.init(localStream, initiator);\n    setPeer({ peer });\n\n    peer.on(\"signal\", data => {\n      console.log(\"signal peer\");\n      const signal = {\n        room: roomId,\n        desc: data\n      };\n      socket.emit(\"signal\", signal);\n    });\n    peer.on(\"stream\", stream => {\n      console.log(\"stream peer\");\n\n      remoteStreams.push(stream);\n      //refs.current[refs.length].srcObject =  stream;\n      //this.remoteVideo.srcObject = stream;\n      setConnecting(false);\n      setWaiting(false);\n    });\n    peer.on(\"error\", function(err) {\n      console.log(err);\n    });\n  };\n\n  const call = otherId => {\n    videoCall.connect(otherId);\n  };\n  const renderFull = () => {\n    if (this.state.full) {\n      return \"The room is full\";\n    }\n  };\n\n  const disableVideo = () => {\n    const videoTrack = localStream.getVideoTracks()[0];\n\n    if (localStream) {\n      videoTrack.enabled = false;\n      setVideoEnabled(false);\n    }\n  };\n\n  const enableVideo = () => {\n    const videoTrack = localStream.getVideoTracks()[0];\n\n    if (localStream) {\n      videoTrack.enabled = true;\n      setVideoEnabled(true);\n    }\n  };\n\n  return (\n    <div className=\"room\">\n      <h2>Salle: {roomId}</h2>\n      {connecting && (\n        <div>\n          <p>Establishing connection...</p>\n        </div>\n      )}\n      {waiting && (\n        <div>\n          <p>Waiting for someone...</p>\n        </div>\n      )}\n      <button onClick={handleLogout}>Déconnectation :-D</button>\n      {remoteStreams.length > 0 && remoteParticipants}\n      <div className=\"local-participant\">\n        {localStream !== undefined ? (\n          <Participant\n            isLocal={true}\n            key={localStream.id}\n            name={username}\n            video={\n              <div>\n                <video ref={videoRef} autoPlay={true} muted={!audioEnabled} />\n              </div>\n            }\n            setAudioEnabled={setAudioEnabled}\n            audioEnabled={audioEnabled}\n            disableVideo={disableVideo}\n            enableVideo={enableVideo}\n            videoEnabled={videoEnabled}\n            videoEnabled={videoEnabled}\n          />\n        ) : (\n          \"\"\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Room;\n"]},"metadata":{},"sourceType":"module"}