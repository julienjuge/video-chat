{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/julienjuge/DEVPERSO/video-chat/components/Participant.js\";\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { AudioMutedOutlined } from \"@ant-design/icons\";\nimport { Button } from \"antd\";\n\nvar Participant = function Participant(_ref) {\n  var participant = _ref.participant;\n\n  var _useState = useState([]),\n      videoTracks = _useState[0],\n      setVideoTracks = _useState[1];\n\n  var _useState2 = useState([]),\n      audioTracks = _useState2[0],\n      setAudioTracks = _useState2[1];\n\n  var videoRef = useRef();\n  var audioRef = useRef();\n\n  var trackpubsToTracks = function trackpubsToTracks(trackMap) {\n    return Array.from(trackMap.values()).map(function (publication) {\n      return publication.track;\n    }).filter(function (track) {\n      return track !== null;\n    });\n  };\n\n  useEffect(function () {\n    var trackSubscribed = function trackSubscribed(track) {\n      if (track.kind === \"video\") {\n        setVideoTracks(function (videoTracks) {\n          return [].concat(_toConsumableArray(videoTracks), [track]);\n        });\n      } else {\n        setAudioTracks(function (audioTracks) {\n          return [].concat(_toConsumableArray(audioTracks), [track]);\n        });\n      }\n    };\n\n    var trackUnsubscribed = function trackUnsubscribed(track) {\n      if (track.kind === \"video\") {\n        setVideoTracks(function (videoTracks) {\n          return videoTracks.filter(function (v) {\n            return v !== track;\n          });\n        });\n      } else {\n        setAudioTracks(function (audioTracks) {\n          return audioTracks.filter(function (a) {\n            return a !== track;\n          });\n        });\n      }\n    };\n\n    setVideoTracks(trackpubsToTracks(participant.videoTracks));\n    setAudioTracks(trackpubsToTracks(participant.audioTracks));\n    participant.on(\"trackSubscribed\", trackSubscribed);\n    participant.on(\"trackUnsubscribed\", trackUnsubscribed);\n    return function () {\n      setVideoTracks([]);\n      setAudioTracks([]);\n      participant.removeAllListeners();\n    };\n  }, [participant]);\n  useEffect(function () {\n    var videoTrack = videoTracks[0];\n    var audioTrack = audioTracks[0];\n\n    if (videoTrack && audioTrack) {\n      videoTrack.attach(videoRef.current);\n      audioTrack.attach(audioRef.current);\n      return function () {\n        videoTrack.detach();\n        audioTrack.detach();\n      };\n    }\n  }, [videoTracks]);\n  return __jsx(\"div\", {\n    className: \"participant\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, participant.identity), __jsx(\"video\", {\n    ref: videoRef,\n    autoPlay: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), __jsx(\"audio\", {\n    ref: audioRef,\n    autoPlay: true,\n    muted: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), __jsx(Button, {\n    style: {\n      position: \"relative\"\n    },\n    type: \"primary\",\n    shape: \"circle\",\n    icon: __jsx(AudioMutedOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Participant;","map":{"version":3,"sources":["/Users/julienjuge/DEVPERSO/video-chat/components/Participant.js"],"names":["React","useEffect","useRef","useState","AudioMutedOutlined","Button","Participant","participant","videoTracks","setVideoTracks","audioTracks","setAudioTracks","videoRef","audioRef","trackpubsToTracks","trackMap","Array","from","values","map","publication","track","filter","trackSubscribed","kind","trackUnsubscribed","v","a","on","removeAllListeners","videoTrack","audioTrack","attach","current","detach","identity","position"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\n\nimport { AudioMutedOutlined } from \"@ant-design/icons\";\nimport { Button } from \"antd\";\n\nconst Participant = ({ participant }) => {\n  const [videoTracks, setVideoTracks] = useState([]);\n  const [audioTracks, setAudioTracks] = useState([]);\n  const videoRef = useRef();\n  const audioRef = useRef();\n  const trackpubsToTracks = trackMap =>\n    Array.from(trackMap.values())\n      .map(publication => publication.track)\n      .filter(track => track !== null);\n  useEffect(() => {\n    const trackSubscribed = track => {\n      if (track.kind === \"video\") {\n        setVideoTracks(videoTracks => [...videoTracks, track]);\n      } else {\n        setAudioTracks(audioTracks => [...audioTracks, track]);\n      }\n    };\n\n    const trackUnsubscribed = track => {\n      if (track.kind === \"video\") {\n        setVideoTracks(videoTracks => videoTracks.filter(v => v !== track));\n      } else {\n        setAudioTracks(audioTracks => audioTracks.filter(a => a !== track));\n      }\n    };\n    setVideoTracks(trackpubsToTracks(participant.videoTracks));\n    setAudioTracks(trackpubsToTracks(participant.audioTracks));\n\n    participant.on(\"trackSubscribed\", trackSubscribed);\n    participant.on(\"trackUnsubscribed\", trackUnsubscribed);\n\n    return () => {\n      setVideoTracks([]);\n      setAudioTracks([]);\n      participant.removeAllListeners();\n    };\n  }, [participant]);\n\n  useEffect(() => {\n    const videoTrack = videoTracks[0];\n    const audioTrack = audioTracks[0];\n    if (videoTrack && audioTrack) {\n      videoTrack.attach(videoRef.current);\n      audioTrack.attach(audioRef.current);\n      return () => {\n        videoTrack.detach();\n        audioTrack.detach();\n      };\n    }\n  }, [videoTracks]);\n\n  return (\n    <div className=\"participant\">\n      <h3>{participant.identity}</h3>\n      <video ref={videoRef} autoPlay={true} />\n      <audio ref={audioRef} autoPlay={true} muted={false} />\n      <Button\n        style={{ position: \"relative\" }}\n        type=\"primary\"\n        shape=\"circle\"\n        icon={<AudioMutedOutlined />}\n      />\n    </div>\n  );\n};\n\nexport default Participant;\n"]},"metadata":{},"sourceType":"module"}