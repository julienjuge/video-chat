{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this;\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Participant from \"./Participant\";\nimport Video from \"twilio-video\";\nimport VideoCall from \"../helpers/simple-peer\";\nimport { getDisplayStream } from \"../helpers/media-access\";\n\nvar io = require(\"socket.io-client\");\n\nvar socket = io(process.env.reactAppSignalingServer);\n\nvar Room = function Room(_ref) {\n  var username = _ref.username,\n      roomId = _ref.roomId,\n      token = _ref.token,\n      handleLogout = _ref.handleLogout;\n\n  var _useState = useState(null),\n      room = _useState[0],\n      setRoom = _useState[1];\n\n  var _useState2 = useState([]),\n      participants = _useState2[0],\n      setParticipants = _useState2[1];\n\n  var _useState3 = useState(),\n      localStream = _useState3[0],\n      setLocalStream = _useState3[1];\n\n  var _useState4 = useState([]),\n      remoteStreamUrl = _useState4[0],\n      setRemoteStreamUrl = _useState4[1];\n\n  var _useState5 = useState(),\n      streamUrl = _useState5[0],\n      setStreamUrl = _useState5[1];\n\n  var _useState6 = useState(),\n      initiator = _useState6[0],\n      setInitiator = _useState6[1];\n\n  var _useState7 = useState(),\n      peer = _useState7[0],\n      setPeer = _useState7[1];\n\n  var _useState8 = useState(),\n      full = _useState8[0],\n      setFull = _useState8[1];\n\n  var _useState9 = useState(),\n      connecting = _useState9[0],\n      setConnecting = _useState9[1];\n\n  var _useState10 = useState(),\n      waiting = _useState10[0],\n      setWaiting = _useState10[1];\n\n  var _useState11 = useState(),\n      localVideo = _useState11[0],\n      setLocalVideo = _useState11[1];\n\n  var _useState12 = useState(false),\n      audioEnabled = _useState12[0],\n      setAudioEnabled = _useState12[1];\n\n  var _useState13 = useState(true),\n      videoEnabled = _useState13[0],\n      setVideoEnabled = _useState13[1];\n\n  var _useState14 = useState([]),\n      peers = _useState14[0],\n      setPeers = _useState14[1];\n\n  var videoCall = new VideoCall();\n  var videoRef = useRef();\n  var audioRef = useRef();\n  var remoteParticipants = participants.map(function (participant) {\n    return __jsx(Participant, {\n      isLocal: false,\n      key: participant.sid,\n      participant: participant\n    });\n  });\n  useEffect(function () {\n    console.log(socket);\n    getUserMedia().then(function () {\n      console.log(\"join\");\n      socket.emit(\"join\", {\n        roomId: roomId\n      });\n      console.log(\"emit join\");\n    });\n    socket.on(\"peer\", function (msg) {\n      var peerId = msg.peerId;\n      console.log(\"new peer poof!\", peerId);\n\n      if (peerId === socket.id) {\n        return console.log(\"Peer is me :D\", peerId);\n      }\n\n      createPeer(peerId, true, streamUrl);\n    });\n    socket.on(\"init\", function () {\n      console.log(\"init\");\n      setInitiator(true);\n    });\n    socket.on(\"ready\", function () {\n      console.log(\"c'est ok on rentre dans \" + roomId);\n      enter(roomId);\n    });\n    socket.on(\"desc\", function (data) {\n      console.log(\"desc\");\n      if (data.type === \"offer\" && initiator) return;\n      if (data.type === \"answer\" && !initiator) return;\n      call(data);\n    });\n    socket.on(\"disconnected\", function () {\n      console.log(\"il est parti\");\n      setInitiator(true);\n    });\n    socket.on(\"full\", function () {\n      console.log(\"c'est plein\");\n      setFull(true);\n    });\n    /*const participantConnected = participant => {\n      setParticipants(prevParticipants => [...prevParticipants, participant]);\n    };\n    const participantDisconnected = participant => {\n      setParticipants(prevParticipants =>\n        prevParticipants.filter(p => p !== participant)\n      );\n    };\n    Video.connect(token, {\n      name: roomName\n    }).then(room => {\n      setRoom(room);\n      room.on(\"participantConnected\", participantConnected);\n      room.on(\"participantDisconnected\", participantDisconnected);\n      room.participants.forEach(participantConnected);\n    });\n    return () => {\n      setRoom(currentRoom => {\n        if (currentRoom && currentRoom.localParticipant.state === \"connected\") {\n          currentRoom.localParticipant.tracks.forEach(function(\n            trackPublication\n          ) {\n            trackPublication.track.stop();\n          });\n          currentRoom.disconnect();\n          return null;\n        } else {\n          return currentRoom;\n        }\n      });\n    };*/\n  }, []);\n\n  var setPeerState = function setPeerState(peerId, peer) {\n    console.log(peerId);\n    console.log(peer);\n\n    var peers = _objectSpread({}, peers);\n\n    peers[peerId] = peer;\n    setPeers(peers);\n  };\n\n  var renderPeers = function renderPeers() {\n    return Object.entries(peers).map(function (entry) {\n      var _entry = _slicedToArray(entry, 2),\n          peerId = _entry[0],\n          peer = _entry[1];\n\n      console.log(peer.video);\n    });\n  };\n\n  var createPeer = function createPeer(peerId, initiator, stream) {\n    console.log(\"creating new peer\", peerId, initiator);\n    var peer = videoCall.init(stream, initiator);\n    console.log(peer);\n    peer.on(\"signal\", function (signal) {\n      var msgId = new Date().getTime();\n      var msg = {\n        msgId: msgId,\n        signal: signal,\n        to: peerId\n      };\n      console.log(\"peer signal sent\", msg);\n      socket.emit(\"signal\", msg);\n    });\n    peer.on(\"stream\", function (stream) {\n      console.log(\"Got peer stream!!!\", peerId, stream);\n      peer.stream = stream;\n      setPeerState(peerId, peer);\n    });\n    peer.on(\"connect\", function () {\n      console.log(\"Connected to peer\", peerId);\n      peer.connected = true;\n      setPeerState(peerId, peer);\n      /*peer.send(this.serialize({\n        msg: 'hey man!'\n      }))*/\n    });\n    peer.on(\"data\", function (data) {\n      console.log(\"Data from peer\", peerId, _this.unserialize(data));\n    });\n    peer.on(\"error\", function (e) {\n      console.log(\"Peer error %s:\", peerId, e);\n    });\n    setPeerState(peerId, peer);\n    return peer;\n  };\n\n  var getUserMedia = function getUserMedia(cb) {\n    return new Promise(function (resolve, reject) {\n      navigator.getUserMedia = navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\n      var op = {\n        audio: true,\n        video: true\n      };\n      navigator.getUserMedia(op, function (stream) {\n        console.log(op);\n        console.log(stream);\n        setStreamUrl(stream);\n        setLocalStream(stream);\n        setLocalVideo(stream);\n        videoRef.current.srcObject = stream; //stream.srcObject.attach(videoRef);\n\n        resolve();\n      }, function () {});\n    });\n  };\n\n  var getDisplay = function getDisplay() {\n    getDisplayStream().then(function (stream) {\n      stream.oninactive = function () {\n        _this.state.peer.removeStream(_this.state.localStream);\n\n        _this.getUserMedia().then(function () {\n          _this.state.peer.addStream(_this.state.localStream);\n        });\n      };\n\n      setStreamUrl(stream);\n      setLocalStream(stream);\n      localVideo.srcObject = stream;\n      peer.addStream(stream);\n    });\n  };\n\n  var enter = function enter(roomId) {\n    console.log(roomId);\n    console.log(\"enter\");\n    setConnecting(true);\n    var peer = videoCall.init(localStream, initiator);\n    console.log(peer);\n    setPeer({\n      peer: peer\n    });\n    peer.on(\"signal\", function (data) {\n      console.log(\"signal\");\n      var signal = {\n        room: roomId,\n        desc: data\n      };\n      socket.emit(\"signal\", signal);\n    });\n    peer.on(\"stream\", function (stream) {\n      console.log(\"stream\");\n      remoteStreamUrl.push(stream); //remoteVideo.srcObject = stream;\n\n      setConnecting(false);\n      setWaiting(false);\n    });\n    peer.on(\"error\", function (err) {\n      console.log(err);\n    });\n  };\n\n  var call = function call(otherId) {\n    videoCall.connect(otherId);\n  };\n\n  var renderFull = function renderFull() {\n    if (_this.state.full) {\n      return \"The room is full\";\n    }\n  };\n\n  var disableVideo = function disableVideo() {\n    var videoTrack = localStream.getVideoTracks()[0];\n\n    if (localStream) {\n      videoTrack.enabled = false;\n      setVideoEnabled(false);\n    }\n  };\n\n  var enableVideo = function enableVideo() {\n    var videoTrack = localStream.getVideoTracks()[0];\n\n    if (localStream) {\n      videoTrack.enabled = true;\n      setVideoEnabled(true);\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"room\"\n  }, __jsx(\"h2\", null, \"Salle: \", roomId), connecting && __jsx(\"div\", null, __jsx(\"p\", null, \"Establishing connection...\")), waiting && __jsx(\"div\", null, __jsx(\"p\", null, \"Waiting for someone...\")), __jsx(\"button\", {\n    onClick: handleLogout\n  }, \"D\\xE9connectation :-D\"), renderPeers, __jsx(\"div\", {\n    className: \"local-participant\"\n  }, localStream !== undefined ? __jsx(Participant, _defineProperty({\n    isLocal: true,\n    key: localStream.id,\n    name: username,\n    video: __jsx(\"div\", null, __jsx(\"video\", {\n      ref: videoRef,\n      autoPlay: true,\n      muted: !audioEnabled\n    })),\n    setAudioEnabled: setAudioEnabled,\n    audioEnabled: audioEnabled,\n    disableVideo: disableVideo,\n    enableVideo: enableVideo,\n    videoEnabled: videoEnabled\n  }, \"videoEnabled\", videoEnabled)) : \"\"));\n};\n\nexport default Room;","map":{"version":3,"sources":["/Users/julienjuge/DEVPERSO/video-chat/components/Room.js"],"names":["React","useEffect","useRef","useState","Participant","Video","VideoCall","getDisplayStream","io","require","socket","process","env","reactAppSignalingServer","Room","username","roomId","token","handleLogout","room","setRoom","participants","setParticipants","localStream","setLocalStream","remoteStreamUrl","setRemoteStreamUrl","streamUrl","setStreamUrl","initiator","setInitiator","peer","setPeer","full","setFull","connecting","setConnecting","waiting","setWaiting","localVideo","setLocalVideo","audioEnabled","setAudioEnabled","videoEnabled","setVideoEnabled","peers","setPeers","videoCall","videoRef","audioRef","remoteParticipants","map","participant","sid","console","log","getUserMedia","then","emit","on","msg","peerId","id","createPeer","enter","data","type","call","setPeerState","renderPeers","Object","entries","entry","video","stream","init","signal","msgId","Date","getTime","to","connected","unserialize","e","cb","Promise","resolve","reject","navigator","webkitGetUserMedia","mozGetUserMedia","op","audio","current","srcObject","getDisplay","oninactive","state","removeStream","addStream","desc","push","err","otherId","connect","renderFull","disableVideo","videoTrack","getVideoTracks","enabled","enableVideo","undefined"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,gBAAT,QAAiC,yBAAjC;;AAEA,IAAMC,EAAE,GAAGC,OAAO,CAAC,kBAAD,CAAlB;;AACA,IAAMC,MAAM,GAAGF,EAAE,CAACG,OAAO,CAACC,GAAR,CAAYC,uBAAb,CAAjB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAA+C;AAAA,MAA5CC,QAA4C,QAA5CA,QAA4C;AAAA,MAAlCC,MAAkC,QAAlCA,MAAkC;AAAA,MAA1BC,KAA0B,QAA1BA,KAA0B;AAAA,MAAnBC,YAAmB,QAAnBA,YAAmB;;AAAA,kBAClCf,QAAQ,CAAC,IAAD,CAD0B;AAAA,MACnDgB,IADmD;AAAA,MAC7CC,OAD6C;;AAAA,mBAElBjB,QAAQ,CAAC,EAAD,CAFU;AAAA,MAEnDkB,YAFmD;AAAA,MAErCC,eAFqC;;AAAA,mBAGpBnB,QAAQ,EAHY;AAAA,MAGnDoB,WAHmD;AAAA,MAGtCC,cAHsC;;AAAA,mBAIZrB,QAAQ,CAAC,EAAD,CAJI;AAAA,MAInDsB,eAJmD;AAAA,MAIlCC,kBAJkC;;AAAA,mBAKxBvB,QAAQ,EALgB;AAAA,MAKnDwB,SALmD;AAAA,MAKxCC,YALwC;;AAAA,mBAMxBzB,QAAQ,EANgB;AAAA,MAMnD0B,SANmD;AAAA,MAMxCC,YANwC;;AAAA,mBAOlC3B,QAAQ,EAP0B;AAAA,MAOnD4B,IAPmD;AAAA,MAO7CC,OAP6C;;AAAA,mBAQlC7B,QAAQ,EAR0B;AAAA,MAQnD8B,IARmD;AAAA,MAQ7CC,OAR6C;;AAAA,mBAStB/B,QAAQ,EATc;AAAA,MASnDgC,UATmD;AAAA,MASvCC,aATuC;;AAAA,oBAU5BjC,QAAQ,EAVoB;AAAA,MAUnDkC,OAVmD;AAAA,MAU1CC,UAV0C;;AAAA,oBAWtBnC,QAAQ,EAXc;AAAA,MAWnDoC,UAXmD;AAAA,MAWvCC,aAXuC;;AAAA,oBAYlBrC,QAAQ,CAAC,KAAD,CAZU;AAAA,MAYnDsC,YAZmD;AAAA,MAYrCC,eAZqC;;AAAA,oBAalBvC,QAAQ,CAAC,IAAD,CAbU;AAAA,MAanDwC,YAbmD;AAAA,MAarCC,eAbqC;;AAAA,oBAchCzC,QAAQ,CAAC,EAAD,CAdwB;AAAA,MAcnD0C,KAdmD;AAAA,MAc5CC,QAd4C;;AAgB1D,MAAMC,SAAS,GAAG,IAAIzC,SAAJ,EAAlB;AACA,MAAM0C,QAAQ,GAAG9C,MAAM,EAAvB;AACA,MAAM+C,QAAQ,GAAG/C,MAAM,EAAvB;AAEA,MAAMgD,kBAAkB,GAAG7B,YAAY,CAAC8B,GAAb,CAAiB,UAAAC,WAAW;AAAA,WACrD,MAAC,WAAD;AACE,MAAA,OAAO,EAAE,KADX;AAEE,MAAA,GAAG,EAAEA,WAAW,CAACC,GAFnB;AAGE,MAAA,WAAW,EAAED;AAHf,MADqD;AAAA,GAA5B,CAA3B;AAQAnD,EAAAA,SAAS,CAAC,YAAM;AACdqD,IAAAA,OAAO,CAACC,GAAR,CAAY7C,MAAZ;AAEA8C,IAAAA,YAAY,GAAGC,IAAf,CAAoB,YAAM;AACxBH,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA7C,MAAAA,MAAM,CAACgD,IAAP,CAAY,MAAZ,EAAoB;AAAE1C,QAAAA,MAAM,EAAEA;AAAV,OAApB;AAEAsC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD,KALD;AAMA7C,IAAAA,MAAM,CAACiD,EAAP,CAAU,MAAV,EAAkB,UAAAC,GAAG,EAAI;AACvB,UAAMC,MAAM,GAAGD,GAAG,CAACC,MAAnB;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BM,MAA9B;;AACA,UAAIA,MAAM,KAAKnD,MAAM,CAACoD,EAAtB,EAA0B;AACxB,eAAOR,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BM,MAA7B,CAAP;AACD;;AACDE,MAAAA,UAAU,CAACF,MAAD,EAAS,IAAT,EAAelC,SAAf,CAAV;AACD,KAPD;AAQAjB,IAAAA,MAAM,CAACiD,EAAP,CAAU,MAAV,EAAkB,YAAM;AACtBL,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAzB,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,KAHD;AAIApB,IAAAA,MAAM,CAACiD,EAAP,CAAU,OAAV,EAAmB,YAAM;AACvBL,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAA6BvC,MAAzC;AACAgD,MAAAA,KAAK,CAAChD,MAAD,CAAL;AACD,KAHD;AAIAN,IAAAA,MAAM,CAACiD,EAAP,CAAU,MAAV,EAAkB,UAAAM,IAAI,EAAI;AACxBX,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,UAAIU,IAAI,CAACC,IAAL,KAAc,OAAd,IAAyBrC,SAA7B,EAAwC;AACxC,UAAIoC,IAAI,CAACC,IAAL,KAAc,QAAd,IAA0B,CAACrC,SAA/B,EAA0C;AAC1CsC,MAAAA,IAAI,CAACF,IAAD,CAAJ;AACD,KALD;AAMAvD,IAAAA,MAAM,CAACiD,EAAP,CAAU,cAAV,EAA0B,YAAM;AAC9BL,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAzB,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,KAHD;AAIApB,IAAAA,MAAM,CAACiD,EAAP,CAAU,MAAV,EAAkB,YAAM;AACtBL,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACArB,MAAAA,OAAO,CAAC,IAAD,CAAP;AACD,KAHD;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BD,GAvEQ,EAuEN,EAvEM,CAAT;;AAyEA,MAAMkC,YAAY,GAAG,SAAfA,YAAe,CAACP,MAAD,EAAS9B,IAAT,EAAkB;AACrCuB,IAAAA,OAAO,CAACC,GAAR,CAAYM,MAAZ;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYxB,IAAZ;;AACA,QAAMc,KAAK,qBAAQA,KAAR,CAAX;;AACAA,IAAAA,KAAK,CAACgB,MAAD,CAAL,GAAgB9B,IAAhB;AACAe,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,GAND;;AAQA,MAAMwB,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,WAAOC,MAAM,CAACC,OAAP,CAAe1B,KAAf,EAAsBM,GAAtB,CAA0B,UAAAqB,KAAK,EAAI;AAAA,kCACjBA,KADiB;AAAA,UACjCX,MADiC;AAAA,UACzB9B,IADyB;;AAExCuB,MAAAA,OAAO,CAACC,GAAR,CAAYxB,IAAI,CAAC0C,KAAjB;AACD,KAHM,CAAP;AAID,GALD;;AAOA,MAAMV,UAAU,GAAG,SAAbA,UAAa,CAACF,MAAD,EAAShC,SAAT,EAAoB6C,MAApB,EAA+B;AAChDpB,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCM,MAAjC,EAAyChC,SAAzC;AAEA,QAAME,IAAI,GAAGgB,SAAS,CAAC4B,IAAV,CAAeD,MAAf,EAAuB7C,SAAvB,CAAb;AAEAyB,IAAAA,OAAO,CAACC,GAAR,CAAYxB,IAAZ;AAEAA,IAAAA,IAAI,CAAC4B,EAAL,CAAQ,QAAR,EAAkB,UAAAiB,MAAM,EAAI;AAC1B,UAAMC,KAAK,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAd;AACA,UAAMnB,GAAG,GAAG;AAAEiB,QAAAA,KAAK,EAALA,KAAF;AAASD,QAAAA,MAAM,EAANA,MAAT;AAAiBI,QAAAA,EAAE,EAAEnB;AAArB,OAAZ;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCK,GAAhC;AACAlD,MAAAA,MAAM,CAACgD,IAAP,CAAY,QAAZ,EAAsBE,GAAtB;AACD,KALD;AAOA7B,IAAAA,IAAI,CAAC4B,EAAL,CAAQ,QAAR,EAAkB,UAAAe,MAAM,EAAI;AAC1BpB,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCM,MAAlC,EAA0Ca,MAA1C;AACA3C,MAAAA,IAAI,CAAC2C,MAAL,GAAcA,MAAd;AACAN,MAAAA,YAAY,CAACP,MAAD,EAAS9B,IAAT,CAAZ;AACD,KAJD;AAMAA,IAAAA,IAAI,CAAC4B,EAAL,CAAQ,SAAR,EAAmB,YAAM;AACvBL,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCM,MAAjC;AACA9B,MAAAA,IAAI,CAACkD,SAAL,GAAiB,IAAjB;AACAb,MAAAA,YAAY,CAACP,MAAD,EAAS9B,IAAT,CAAZ;AACA;;;AAGD,KAPD;AASAA,IAAAA,IAAI,CAAC4B,EAAL,CAAQ,MAAR,EAAgB,UAAAM,IAAI,EAAI;AACtBX,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BM,MAA9B,EAAsC,KAAI,CAACqB,WAAL,CAAiBjB,IAAjB,CAAtC;AACD,KAFD;AAIAlC,IAAAA,IAAI,CAAC4B,EAAL,CAAQ,OAAR,EAAiB,UAAAwB,CAAC,EAAI;AACpB7B,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BM,MAA9B,EAAsCsB,CAAtC;AACD,KAFD;AAIAf,IAAAA,YAAY,CAACP,MAAD,EAAS9B,IAAT,CAAZ;AAEA,WAAOA,IAAP;AACD,GAxCD;;AA0CA,MAAMyB,YAAY,GAAG,SAAfA,YAAe,CAAA4B,EAAE,EAAI;AACzB,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCC,MAAAA,SAAS,CAAChC,YAAV,GAAyBgC,SAAS,CAAChC,YAAV,GACvBgC,SAAS,CAAChC,YAAV,IACAgC,SAAS,CAACC,kBADV,IAEAD,SAAS,CAACE,eAHZ;AAIA,UAAMC,EAAE,GAAG;AACTC,QAAAA,KAAK,EAAE,IADE;AAETnB,QAAAA,KAAK,EAAE;AAFE,OAAX;AAIAe,MAAAA,SAAS,CAAChC,YAAV,CACEmC,EADF,EAEE,UAAAjB,MAAM,EAAI;AACRpB,QAAAA,OAAO,CAACC,GAAR,CAAYoC,EAAZ;AACArC,QAAAA,OAAO,CAACC,GAAR,CAAYmB,MAAZ;AACA9C,QAAAA,YAAY,CAAC8C,MAAD,CAAZ;AACAlD,QAAAA,cAAc,CAACkD,MAAD,CAAd;AACAlC,QAAAA,aAAa,CAACkC,MAAD,CAAb;AACA1B,QAAAA,QAAQ,CAAC6C,OAAT,CAAiBC,SAAjB,GAA6BpB,MAA7B,CANQ,CAQR;;AACAY,QAAAA,OAAO;AACR,OAZH,EAaE,YAAM,CAAE,CAbV;AAeD,KAxBM,CAAP;AAyBD,GA1BD;;AA2BA,MAAMS,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvBxF,IAAAA,gBAAgB,GAAGkD,IAAnB,CAAwB,UAAAiB,MAAM,EAAI;AAChCA,MAAAA,MAAM,CAACsB,UAAP,GAAoB,YAAM;AACxB,QAAA,KAAI,CAACC,KAAL,CAAWlE,IAAX,CAAgBmE,YAAhB,CAA6B,KAAI,CAACD,KAAL,CAAW1E,WAAxC;;AACA,QAAA,KAAI,CAACiC,YAAL,GAAoBC,IAApB,CAAyB,YAAM;AAC7B,UAAA,KAAI,CAACwC,KAAL,CAAWlE,IAAX,CAAgBoE,SAAhB,CAA0B,KAAI,CAACF,KAAL,CAAW1E,WAArC;AACD,SAFD;AAGD,OALD;;AAMAK,MAAAA,YAAY,CAAC8C,MAAD,CAAZ;AACAlD,MAAAA,cAAc,CAACkD,MAAD,CAAd;AACAnC,MAAAA,UAAU,CAACuD,SAAX,GAAuBpB,MAAvB;AACA3C,MAAAA,IAAI,CAACoE,SAAL,CAAezB,MAAf;AACD,KAXD;AAYD,GAbD;;AAeA,MAAMV,KAAK,GAAG,SAARA,KAAQ,CAAAhD,MAAM,EAAI;AACtBsC,IAAAA,OAAO,CAACC,GAAR,CAAYvC,MAAZ;AACAsC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAnB,IAAAA,aAAa,CAAC,IAAD,CAAb;AACA,QAAML,IAAI,GAAGgB,SAAS,CAAC4B,IAAV,CAAepD,WAAf,EAA4BM,SAA5B,CAAb;AACAyB,IAAAA,OAAO,CAACC,GAAR,CAAYxB,IAAZ;AACAC,IAAAA,OAAO,CAAC;AAAED,MAAAA,IAAI,EAAJA;AAAF,KAAD,CAAP;AAEAA,IAAAA,IAAI,CAAC4B,EAAL,CAAQ,QAAR,EAAkB,UAAAM,IAAI,EAAI;AACxBX,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,UAAMqB,MAAM,GAAG;AACbzD,QAAAA,IAAI,EAAEH,MADO;AAEboF,QAAAA,IAAI,EAAEnC;AAFO,OAAf;AAIAvD,MAAAA,MAAM,CAACgD,IAAP,CAAY,QAAZ,EAAsBkB,MAAtB;AACD,KAPD;AAQA7C,IAAAA,IAAI,CAAC4B,EAAL,CAAQ,QAAR,EAAkB,UAAAe,MAAM,EAAI;AAC1BpB,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AAEA9B,MAAAA,eAAe,CAAC4E,IAAhB,CAAqB3B,MAArB,EAH0B,CAK1B;;AACAtC,MAAAA,aAAa,CAAC,KAAD,CAAb;AACAE,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KARD;AASAP,IAAAA,IAAI,CAAC4B,EAAL,CAAQ,OAAR,EAAiB,UAAS2C,GAAT,EAAc;AAC7BhD,MAAAA,OAAO,CAACC,GAAR,CAAY+C,GAAZ;AACD,KAFD;AAGD,GA5BD;;AA6BA,MAAMnC,IAAI,GAAG,SAAPA,IAAO,CAAAoC,OAAO,EAAI;AACtBxD,IAAAA,SAAS,CAACyD,OAAV,CAAkBD,OAAlB;AACD,GAFD;;AAGA,MAAME,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,QAAI,KAAI,CAACR,KAAL,CAAWhE,IAAf,EAAqB;AACnB,aAAO,kBAAP;AACD;AACF,GAJD;;AAMA,MAAMyE,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,QAAMC,UAAU,GAAGpF,WAAW,CAACqF,cAAZ,GAA6B,CAA7B,CAAnB;;AAEA,QAAIrF,WAAJ,EAAiB;AACfoF,MAAAA,UAAU,CAACE,OAAX,GAAqB,KAArB;AACAjE,MAAAA,eAAe,CAAC,KAAD,CAAf;AACD;AACF,GAPD;;AASA,MAAMkE,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,QAAMH,UAAU,GAAGpF,WAAW,CAACqF,cAAZ,GAA6B,CAA7B,CAAnB;;AAEA,QAAIrF,WAAJ,EAAiB;AACfoF,MAAAA,UAAU,CAACE,OAAX,GAAqB,IAArB;AACAjE,MAAAA,eAAe,CAAC,IAAD,CAAf;AACD;AACF,GAPD;;AASA,SACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,6BAAY5B,MAAZ,CADF,EAEGmB,UAAU,IACT,mBACE,8CADF,CAHJ,EAOGE,OAAO,IACN,mBACE,0CADF,CARJ,EAYE;AAAQ,IAAA,OAAO,EAAEnB;AAAjB,6BAZF,EAaGmD,WAbH,EAcE;AAAK,IAAA,SAAS,EAAC;AAAf,KACG9C,WAAW,KAAKwF,SAAhB,GACC,MAAC,WAAD;AACE,IAAA,OAAO,EAAE,IADX;AAEE,IAAA,GAAG,EAAExF,WAAW,CAACuC,EAFnB;AAGE,IAAA,IAAI,EAAE/C,QAHR;AAIE,IAAA,KAAK,EACH,mBACE;AAAO,MAAA,GAAG,EAAEiC,QAAZ;AAAsB,MAAA,QAAQ,EAAE,IAAhC;AAAsC,MAAA,KAAK,EAAE,CAACP;AAA9C,MADF,CALJ;AASE,IAAA,eAAe,EAAEC,eATnB;AAUE,IAAA,YAAY,EAAED,YAVhB;AAWE,IAAA,YAAY,EAAEiE,YAXhB;AAYE,IAAA,WAAW,EAAEI,WAZf;AAaE,IAAA,YAAY,EAAEnE;AAbhB,qBAcgBA,YAdhB,EADD,GAkBC,EAnBJ,CAdF,CADF;AAuCD,CAvSD;;AAySA,eAAe7B,IAAf","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\n\nimport Participant from \"./Participant\";\nimport Video from \"twilio-video\";\nimport VideoCall from \"../helpers/simple-peer\";\nimport { getDisplayStream } from \"../helpers/media-access\";\n\nconst io = require(\"socket.io-client\");\nconst socket = io(process.env.reactAppSignalingServer);\n\nconst Room = ({ username, roomId, token, handleLogout }) => {\n  const [room, setRoom] = useState(null);\n  const [participants, setParticipants] = useState([]);\n  const [localStream, setLocalStream] = useState();\n  const [remoteStreamUrl, setRemoteStreamUrl] = useState([]);\n  const [streamUrl, setStreamUrl] = useState();\n  const [initiator, setInitiator] = useState();\n  const [peer, setPeer] = useState();\n  const [full, setFull] = useState();\n  const [connecting, setConnecting] = useState();\n  const [waiting, setWaiting] = useState();\n  const [localVideo, setLocalVideo] = useState();\n  const [audioEnabled, setAudioEnabled] = useState(false);\n  const [videoEnabled, setVideoEnabled] = useState(true);\n  const [peers, setPeers] = useState([]);\n\n  const videoCall = new VideoCall();\n  const videoRef = useRef();\n  const audioRef = useRef();\n\n  const remoteParticipants = participants.map(participant => (\n    <Participant\n      isLocal={false}\n      key={participant.sid}\n      participant={participant}\n    />\n  ));\n\n  useEffect(() => {\n    console.log(socket);\n\n    getUserMedia().then(() => {\n      console.log(\"join\");\n      socket.emit(\"join\", { roomId: roomId });\n\n      console.log(\"emit join\");\n    });\n    socket.on(\"peer\", msg => {\n      const peerId = msg.peerId;\n      console.log(\"new peer poof!\", peerId);\n      if (peerId === socket.id) {\n        return console.log(\"Peer is me :D\", peerId);\n      }\n      createPeer(peerId, true, streamUrl);\n    });\n    socket.on(\"init\", () => {\n      console.log(\"init\");\n      setInitiator(true);\n    });\n    socket.on(\"ready\", () => {\n      console.log(\"c'est ok on rentre dans \" + roomId);\n      enter(roomId);\n    });\n    socket.on(\"desc\", data => {\n      console.log(\"desc\");\n      if (data.type === \"offer\" && initiator) return;\n      if (data.type === \"answer\" && !initiator) return;\n      call(data);\n    });\n    socket.on(\"disconnected\", () => {\n      console.log(\"il est parti\");\n      setInitiator(true);\n    });\n    socket.on(\"full\", () => {\n      console.log(\"c'est plein\");\n      setFull(true);\n    });\n\n    /*const participantConnected = participant => {\n      setParticipants(prevParticipants => [...prevParticipants, participant]);\n    };\n    const participantDisconnected = participant => {\n      setParticipants(prevParticipants =>\n        prevParticipants.filter(p => p !== participant)\n      );\n    };\n    Video.connect(token, {\n      name: roomName\n    }).then(room => {\n      setRoom(room);\n      room.on(\"participantConnected\", participantConnected);\n      room.on(\"participantDisconnected\", participantDisconnected);\n      room.participants.forEach(participantConnected);\n    });\n    return () => {\n      setRoom(currentRoom => {\n        if (currentRoom && currentRoom.localParticipant.state === \"connected\") {\n          currentRoom.localParticipant.tracks.forEach(function(\n            trackPublication\n          ) {\n            trackPublication.track.stop();\n          });\n          currentRoom.disconnect();\n          return null;\n        } else {\n          return currentRoom;\n        }\n      });\n    };*/\n  }, []);\n\n  const setPeerState = (peerId, peer) => {\n    console.log(peerId);\n    console.log(peer);\n    const peers = { ...peers };\n    peers[peerId] = peer;\n    setPeers(peers);\n  };\n\n  const renderPeers = () => {\n    return Object.entries(peers).map(entry => {\n      const [peerId, peer] = entry;\n      console.log(peer.video);\n    });\n  };\n\n  const createPeer = (peerId, initiator, stream) => {\n    console.log(\"creating new peer\", peerId, initiator);\n\n    const peer = videoCall.init(stream, initiator);\n\n    console.log(peer);\n\n    peer.on(\"signal\", signal => {\n      const msgId = new Date().getTime();\n      const msg = { msgId, signal, to: peerId };\n      console.log(\"peer signal sent\", msg);\n      socket.emit(\"signal\", msg);\n    });\n\n    peer.on(\"stream\", stream => {\n      console.log(\"Got peer stream!!!\", peerId, stream);\n      peer.stream = stream;\n      setPeerState(peerId, peer);\n    });\n\n    peer.on(\"connect\", () => {\n      console.log(\"Connected to peer\", peerId);\n      peer.connected = true;\n      setPeerState(peerId, peer);\n      /*peer.send(this.serialize({\n        msg: 'hey man!'\n      }))*/\n    });\n\n    peer.on(\"data\", data => {\n      console.log(\"Data from peer\", peerId, this.unserialize(data));\n    });\n\n    peer.on(\"error\", e => {\n      console.log(\"Peer error %s:\", peerId, e);\n    });\n\n    setPeerState(peerId, peer);\n\n    return peer;\n  };\n\n  const getUserMedia = cb => {\n    return new Promise((resolve, reject) => {\n      navigator.getUserMedia = navigator.getUserMedia =\n        navigator.getUserMedia ||\n        navigator.webkitGetUserMedia ||\n        navigator.mozGetUserMedia;\n      const op = {\n        audio: true,\n        video: true\n      };\n      navigator.getUserMedia(\n        op,\n        stream => {\n          console.log(op);\n          console.log(stream);\n          setStreamUrl(stream);\n          setLocalStream(stream);\n          setLocalVideo(stream);\n          videoRef.current.srcObject = stream;\n\n          //stream.srcObject.attach(videoRef);\n          resolve();\n        },\n        () => {}\n      );\n    });\n  };\n  const getDisplay = () => {\n    getDisplayStream().then(stream => {\n      stream.oninactive = () => {\n        this.state.peer.removeStream(this.state.localStream);\n        this.getUserMedia().then(() => {\n          this.state.peer.addStream(this.state.localStream);\n        });\n      };\n      setStreamUrl(stream);\n      setLocalStream(stream);\n      localVideo.srcObject = stream;\n      peer.addStream(stream);\n    });\n  };\n\n  const enter = roomId => {\n    console.log(roomId);\n    console.log(\"enter\");\n    setConnecting(true);\n    const peer = videoCall.init(localStream, initiator);\n    console.log(peer);\n    setPeer({ peer });\n\n    peer.on(\"signal\", data => {\n      console.log(\"signal\");\n      const signal = {\n        room: roomId,\n        desc: data\n      };\n      socket.emit(\"signal\", signal);\n    });\n    peer.on(\"stream\", stream => {\n      console.log(\"stream\");\n\n      remoteStreamUrl.push(stream);\n\n      //remoteVideo.srcObject = stream;\n      setConnecting(false);\n      setWaiting(false);\n    });\n    peer.on(\"error\", function(err) {\n      console.log(err);\n    });\n  };\n  const call = otherId => {\n    videoCall.connect(otherId);\n  };\n  const renderFull = () => {\n    if (this.state.full) {\n      return \"The room is full\";\n    }\n  };\n\n  const disableVideo = () => {\n    const videoTrack = localStream.getVideoTracks()[0];\n\n    if (localStream) {\n      videoTrack.enabled = false;\n      setVideoEnabled(false);\n    }\n  };\n\n  const enableVideo = () => {\n    const videoTrack = localStream.getVideoTracks()[0];\n\n    if (localStream) {\n      videoTrack.enabled = true;\n      setVideoEnabled(true);\n    }\n  };\n\n  return (\n    <div className=\"room\">\n      <h2>Salle: {roomId}</h2>\n      {connecting && (\n        <div>\n          <p>Establishing connection...</p>\n        </div>\n      )}\n      {waiting && (\n        <div>\n          <p>Waiting for someone...</p>\n        </div>\n      )}\n      <button onClick={handleLogout}>Déconnectation :-D</button>\n      {renderPeers}\n      <div className=\"local-participant\">\n        {localStream !== undefined ? (\n          <Participant\n            isLocal={true}\n            key={localStream.id}\n            name={username}\n            video={\n              <div>\n                <video ref={videoRef} autoPlay={true} muted={!audioEnabled} />\n              </div>\n            }\n            setAudioEnabled={setAudioEnabled}\n            audioEnabled={audioEnabled}\n            disableVideo={disableVideo}\n            enableVideo={enableVideo}\n            videoEnabled={videoEnabled}\n            videoEnabled={videoEnabled}\n          />\n        ) : (\n          \"\"\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Room;\n"]},"metadata":{},"sourceType":"module"}